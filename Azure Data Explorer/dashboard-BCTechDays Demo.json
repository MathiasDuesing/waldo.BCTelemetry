{"$schema":"https://dataexplorer.azure.com/static/d/schema/52/dashboard.json","id":"5a38b901-6953-4767-8166-e207a34cc63a","eTag":"ad601172-0aca-480b-b7b3-e616f4054012","schema_version":"52","title":"BCTechDays Demo","tiles":[{"id":"58a9d2a6-ef15-45a7-a081-8bd645783134","title":"All Companies","visualType":"table","pageId":"e0ea770f-baf5-47a6-88b1-1cb0ec5dce59","layout":{"x":0,"y":6,"width":9,"height":7},"queryRef":{"kind":"query","queryId":"790eee3d-683d-4568-96a0-a47e2a86b934"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"36af83a5-9ea2-437f-b877-1a994d272189","title":"Events","visualType":"table","pageId":"767419b8-bb1b-4f95-9790-6e9f47cae7a1","layout":{"x":0,"y":0,"width":17,"height":5},"queryRef":{"kind":"query","queryId":"78993648-5f30-449e-a88c-277d12c1ff66"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"493ffb0e-905d-4269-96cd-34ef121ba65f","title":"Events","visualType":"table","pageId":"e0ea770f-baf5-47a6-88b1-1cb0ec5dce59","layout":{"x":9,"y":6,"width":12,"height":7},"queryRef":{"kind":"query","queryId":"20e94d3a-81d6-43d3-aa86-fd6012b4a74e"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[{"urlColumn":"LearnUrl","displayColumn":"eventId","disabled":false}]}},{"id":"11216497-2ca2-4190-b810-0f96fa24e582","title":"Externaldata (All Events)","visualType":"table","pageId":"767419b8-bb1b-4f95-9790-6e9f47cae7a1","layout":{"x":0,"y":5,"width":8,"height":7},"queryRef":{"kind":"query","queryId":"f424f326-abc1-4ecb-96cf-2b09fea27232"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"d796a89e-5f66-4992-bb0b-8d5130c4fd5f","title":"Events (external data)","visualType":"table","pageId":"767419b8-bb1b-4f95-9790-6e9f47cae7a1","layout":{"x":0,"y":12,"width":17,"height":8},"queryRef":{"kind":"query","queryId":"a84ee158-1f77-43d8-b444-d2ddcec7ec23"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"c6ffe9c3-dc2d-4035-893a-cd2de16dc879","title":"Custom Events (Microsoft)","visualType":"table","pageId":"f56f5822-56bf-4758-a589-1e398df2aeee","layout":{"x":0,"y":0,"width":9,"height":7},"queryRef":{"kind":"query","queryId":"38fc41a6-a185-4d33-9189-40b36b62ce48"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"5d761873-80b0-4e93-84ef-b27472d05f1a","title":"Custom Events (Not Microsoft)","visualType":"table","pageId":"f56f5822-56bf-4758-a589-1e398df2aeee","layout":{"x":9,"y":0,"width":9,"height":7},"queryRef":{"kind":"query","queryId":"0162183e-37b2-42f8-a2bf-0ae0c194edc9"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"58e67413-3cc1-4564-8e5a-a0d73bbfe552","title":"Telemetry on Tests","visualType":"table","pageId":"fbdd4db5-d977-4a56-997e-4043d8c0645f","layout":{"x":0,"y":0,"width":18,"height":7},"queryRef":{"kind":"query","queryId":"3712d86b-102d-41f6-b896-8b1b43dad5d4"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"eb1403d0-3a9e-4657-ac02-ebc2bdb2a04e","title":"Tests - Codeunits","visualType":"line","pageId":"fbdd4db5-d977-4a56-997e-4043d8c0645f","layout":{"x":0,"y":7,"width":18,"height":7},"queryRef":{"kind":"query","queryId":"9c8361d8-1c73-497f-906c-01b4e89083d3"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":true,"xColumnTitle":"","xColumn":null,"yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"7bfebbac-36c9-4eb1-9ec0-21b1ffc1919c","title":"All Executions","visualType":"table","pageId":"e057b00e-7fd8-476e-a00c-3421e7656af8","layout":{"x":0,"y":0,"width":10,"height":8},"queryRef":{"kind":"query","queryId":"beb48049-40f0-43a6-9ff0-6f39597998fa"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"2b3554f0-62a7-4f05-8645-775d16ce0537","title":"Averages per customers","visualType":"table","pageId":"e057b00e-7fd8-476e-a00c-3421e7656af8","layout":{"x":10,"y":0,"width":9,"height":8},"queryRef":{"kind":"query","queryId":"13427938-11b9-40ae-8fc0-6aa9f0e5b30b"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"879a3f9f-2039-47dc-bf27-5b7e41ffa086","title":"Sales-Post Order (per day)","visualType":"line","pageId":"e057b00e-7fd8-476e-a00c-3421e7656af8","layout":{"x":0,"y":8,"width":19,"height":7},"queryRef":{"kind":"query","queryId":"cadd662e-85e6-4b29-a3c5-bc45bdd1741b"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":"timestamp","yColumns":["avgDuration"],"seriesColumns":["tenantDescription"],"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"db42d8cc-fc8f-4d9d-a468-f42b7d9c5b15","title":"Missing Indexes","visualType":"table","pageId":"9c16317e-23f7-4e29-8a61-dfae292ea6d0","layout":{"x":0,"y":3,"width":19,"height":8},"queryRef":{"kind":"query","queryId":"e28cb515-0fec-4c44-8487-a7fb20bf1bdb"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"902f4361-9100-49e1-b7f0-a503960e3ff3","title":"Missing Indexes (By missing index)","visualType":"table","pageId":"9c16317e-23f7-4e29-8a61-dfae292ea6d0","layout":{"x":0,"y":11,"width":13,"height":8},"queryRef":{"kind":"query","queryId":"b22a3d81-217a-4dcf-b6ab-afe3c24dec62"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"370c3e16-a1a1-46c0-9a70-931ece74d3ac","title":"Missing Indexes per Customer","visualType":"table","pageId":"9c16317e-23f7-4e29-8a61-dfae292ea6d0","layout":{"x":13,"y":11,"width":6,"height":8},"queryRef":{"kind":"query","queryId":"c15d3542-0f62-4123-afab-e5ba915d1c0a"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"a3abee56-9597-4fa6-9076-f91c8577cc18","title":"Missing indexes over time","visualType":"stackedcolumn","pageId":"9c16317e-23f7-4e29-8a61-dfae292ea6d0","layout":{"x":0,"y":19,"width":19,"height":7},"queryRef":{"kind":"query","queryId":"a7083797-148b-40ee-ad8c-b7e247717355"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":null,"yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"037f192e-e64c-4a41-8406-93bfb5334e5e","title":"Media Orphans Info","visualType":"table","pageId":"9c16317e-23f7-4e29-8a61-dfae292ea6d0","layout":{"x":0,"y":29,"width":9,"height":11},"queryRef":{"kind":"query","queryId":"48dd62ab-1345-493a-baec-ea3e3be88683"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"aea7e8a4-6a7a-4bd2-8f70-b79ba6e99ce6","title":"2.","visualType":"markdownCard","pageId":"9c16317e-23f7-4e29-8a61-dfae292ea6d0","layout":{"x":0,"y":26,"width":19,"height":3},"markdownText":"# Media Orphans Info\n","visualOptions":{}},{"id":"a3f0dce1-796d-4af3-8d3b-ea8f967d69ec","title":"1.","visualType":"markdownCard","pageId":"9c16317e-23f7-4e29-8a61-dfae292ea6d0","layout":{"x":0,"y":0,"width":9,"height":3},"markdownText":"# Missing Indexes\n","visualOptions":{}},{"id":"aaeb043d-d981-40c7-8b77-807143029777","title":"Orphan problems","visualType":"column","pageId":"9c16317e-23f7-4e29-8a61-dfae292ea6d0","layout":{"x":0,"y":40,"width":19,"height":7},"queryRef":{"kind":"query","queryId":"e747255b-9b6d-4eb5-be36-067f4be15540"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":null,"yColumns":null,"seriesColumns":["message","aadTenantId"],"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"b09c500b-5a3d-4c3d-96f7-ee65f204728a","title":"Current Orphans per customer","visualType":"table","pageId":"9c16317e-23f7-4e29-8a61-dfae292ea6d0","layout":{"x":9,"y":29,"width":7,"height":11},"queryRef":{"kind":"query","queryId":"d51a6336-bbee-4332-9d02-e183e4e0000d"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"8b18a687-a7ff-4d33-bffc-0d2ab9c25025","title":"1.","visualType":"markdownCard","pageId":"2546cc61-63e2-4e89-8157-d2977e6ddde6","layout":{"x":0,"y":0,"width":20,"height":3},"markdownText":"# Partial Records\n","visualOptions":{}},{"id":"13d901f3-4d4b-4c9c-9709-7dfc79754f58","title":"Partial Records","visualType":"table","pageId":"2546cc61-63e2-4e89-8157-d2977e6ddde6","layout":{"x":0,"y":3,"width":20,"height":9},"queryRef":{"kind":"query","queryId":"7924fd82-b8cf-4f9b-ac28-e3efe231c87f"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"0bf7f557-415a-4742-bca6-bf0fbf8357c9","title":"No Of Columns by Extension","visualType":"table","pageId":"2546cc61-63e2-4e89-8157-d2977e6ddde6","layout":{"x":0,"y":12,"width":10,"height":7},"queryRef":{"kind":"query","queryId":"2219fccb-a948-4c7d-9bfb-66dfd631d4e5"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"ede47df1-472f-434c-bfc3-00b8a0f0c83a","title":"No Of Columns by Table","visualType":"table","pageId":"2546cc61-63e2-4e89-8157-d2977e6ddde6","layout":{"x":10,"y":12,"width":10,"height":7},"queryRef":{"kind":"query","queryId":"cd559135-8e3e-443e-9bf7-aa5eefbd918e"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"8beffbc9-847c-4980-8699-58206c9c9851","title":"2.","visualType":"markdownCard","pageId":"2546cc61-63e2-4e89-8157-d2977e6ddde6","layout":{"x":0,"y":19,"width":20,"height":3},"markdownText":"# Locking","visualOptions":{}},{"id":"663a3dd0-2c2e-41e5-b816-15f8e709ff4b","title":"Locking IsEmpty","visualType":"table","pageId":"2546cc61-63e2-4e89-8157-d2977e6ddde6","layout":{"x":0,"y":22,"width":13,"height":6},"queryRef":{"kind":"query","queryId":"a8cb85e2-d015-4f9c-82af-ddecf9f0c22f"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"c520b0d4-e9e8-4cb2-816f-c0f8077cbcbb","title":"IsEmpty by Extension","visualType":"table","pageId":"2546cc61-63e2-4e89-8157-d2977e6ddde6","layout":{"x":13,"y":22,"width":7,"height":6},"queryRef":{"kind":"query","queryId":"7af352fe-0a3b-45f3-914f-4fb283fd7d0f"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"a985afb8-3934-4da9-920c-d61dceee5383","title":"Locking Calcsums","visualType":"table","pageId":"2546cc61-63e2-4e89-8157-d2977e6ddde6","layout":{"x":0,"y":28,"width":13,"height":6},"queryRef":{"kind":"query","queryId":"f84ee372-e0dc-4325-bf8d-9e952d6c64a2"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"71c09f6b-3125-4a80-9d49-27a28b47e2f9","title":"Calcsums by Extension","visualType":"table","pageId":"2546cc61-63e2-4e89-8157-d2977e6ddde6","layout":{"x":13,"y":28,"width":7,"height":6},"queryRef":{"kind":"query","queryId":"42c75489-f183-40fb-99ec-92bae335e88b"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"d6721bfe-13f2-4b0f-b9f1-cba1422c9584","title":"Locking Counts","visualType":"table","pageId":"2546cc61-63e2-4e89-8157-d2977e6ddde6","layout":{"x":0,"y":34,"width":13,"height":6},"queryRef":{"kind":"query","queryId":"0af73c00-cc78-45db-a77b-7dd8329916fb"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"e87dead3-c5f4-4ce2-bedb-bbfab681531a","title":"Count by Extension","visualType":"table","pageId":"2546cc61-63e2-4e89-8157-d2977e6ddde6","layout":{"x":13,"y":34,"width":7,"height":6},"queryRef":{"kind":"query","queryId":"742f33f5-18d7-4bce-89be-054e7451857e"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"8dc2d36b-69e2-4d37-8e20-29ddd36df1e3","title":"Last Deadlocks","visualType":"table","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":24,"width":15,"height":7},"queryRef":{"kind":"query","queryId":"8bac629d-6bfd-4930-83de-92e2269e0d6f"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"28064c11-c393-4849-975a-b2e7f404e731","title":"1.","visualType":"markdownCard","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":0,"width":20,"height":3},"markdownText":"# API Calls","visualOptions":{}},{"id":"dd110ace-993f-4bda-9fa9-c88ce5a3ba84","title":"DeadLocks By Customer","visualType":"table","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":15,"y":24,"width":5,"height":7},"queryRef":{"kind":"query","queryId":"1ea6c66c-8957-486d-a3e8-a8460e9525aa"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"7fc032e1-51ee-466f-ba81-fea165764dd6","title":"Deadlocks by hour","visualType":"stackedcolumn","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":31,"width":20,"height":6},"queryRef":{"kind":"query","queryId":"4be30777-e2ea-43e4-b03e-ea7948383dca"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":true,"xColumnTitle":"","xColumn":null,"yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"6d2e8a36-4f35-401b-8e59-a179df48be20","title":"Summery","visualType":"table","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":37,"width":20,"height":9},"queryRef":{"kind":"query","queryId":"92151635-da94-4eb9-a00a-4bacfebe36f8"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"6a28c367-2f8d-4518-9c64-3f56a4f635b2","title":"Locking Object","visualType":"pie","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":10,"y":46,"width":10,"height":12},"queryRef":{"kind":"query","queryId":"ccb061ab-9e56-47d0-8305-74156b631512"},"visualOptions":{"hideLegend":true,"xColumn":"LockingObject","yColumns":null,"seriesColumns":null,"crossFilterDisabled":false,"drillthroughDisabled":false,"labelDisabled":false,"pie__label":["name","percentage"],"tooltipDisabled":false,"pie__tooltip":["name","percentage","value"],"pie__orderBy":"size","pie__kind":"pie","pie__topNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"5ae67d35-441f-4f50-b4cb-581ce485b7d7","title":"Source Process","visualType":"pie","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":46,"width":10,"height":12},"queryRef":{"kind":"query","queryId":"93affb39-b5d2-44cb-9542-9594cb9283a7"},"visualOptions":{"hideLegend":true,"xColumn":"SourceProcess","yColumns":null,"seriesColumns":null,"crossFilterDisabled":false,"drillthroughDisabled":false,"labelDisabled":false,"pie__label":["name","percentage"],"tooltipDisabled":true,"pie__tooltip":["name","percentage","value"],"pie__orderBy":"size","pie__kind":"pie","pie__topNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"202772f1-642c-4f03-8fc8-2c3221d51ec1","title":"3.","visualType":"markdownCard","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":58,"width":20,"height":3},"markdownText":"# Lock Timeouts","visualOptions":{}},{"id":"c54267c7-cd9f-4d7d-ace5-07c4f51753b6","title":"Last Lock Timeouts","visualType":"table","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":61,"width":14,"height":7},"queryRef":{"kind":"query","queryId":"b333a79f-0f03-4d95-818d-f0088dd7daad"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"d0ae2747-309d-494b-82cd-8d799cc46c1b","title":"Lock Timeouts By Customer","visualType":"table","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":14,"y":61,"width":6,"height":7},"queryRef":{"kind":"query","queryId":"389c5957-9aff-4d94-8b0d-368d2372d521"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"78fba414-a825-4909-8160-cd65063e2aff","title":"Lock Timeouts by hour","visualType":"stackedcolumn","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":68,"width":20,"height":6},"queryRef":{"kind":"query","queryId":"b8f08134-adb5-46bf-acd7-89bd9872eb4b"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":true,"xColumnTitle":"","xColumn":null,"yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"73b1cef1-fe54-4213-ac87-3f5684c4c233","title":"Lock Timeouts by Source Process","visualType":"pie","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":74,"width":10,"height":12},"queryRef":{"kind":"query","queryId":"78734f4d-ca59-44a0-835f-594f7c588b28"},"visualOptions":{"hideLegend":true,"xColumn":"SourceProcess","yColumns":null,"seriesColumns":null,"crossFilterDisabled":false,"drillthroughDisabled":false,"labelDisabled":false,"pie__label":["name","percentage"],"tooltipDisabled":true,"pie__tooltip":["name","percentage","value"],"pie__orderBy":"size","pie__kind":"pie","pie__topNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"0c2d9c72-e771-46c9-901c-ee85b05bf01f","title":"Lock Timeouts by Locking Object","visualType":"pie","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":10,"y":74,"width":10,"height":12},"queryRef":{"kind":"query","queryId":"016fc5c6-861a-4394-94ca-cf749eac1bd2"},"visualOptions":{"hideLegend":true,"xColumn":"LockingObject","yColumns":null,"seriesColumns":null,"crossFilterDisabled":false,"drillthroughDisabled":false,"labelDisabled":false,"pie__label":["name","percentage"],"tooltipDisabled":false,"pie__tooltip":["name","percentage","value"],"pie__orderBy":"size","pie__kind":"pie","pie__topNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"00cfeb83-510c-4317-97b7-34c2772c1e2c","title":"2.","visualType":"markdownCard","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":21,"width":20,"height":3},"markdownText":"# Deadlocks","visualOptions":{}},{"id":"7d036709-66c6-4a5f-977b-5c2984d9c050","title":"API Calls by Customer","visualType":"table","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":3,"width":12,"height":6},"queryRef":{"kind":"query","queryId":"17f31632-bbd6-48ca-8f46-3f575cc6fd76"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"c5718320-ed81-4242-8837-c2baa39149db","title":"By Day","visualType":"column","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":12,"y":3,"width":8,"height":6},"queryRef":{"kind":"query","queryId":"7e9129d2-6022-483f-b11c-570e1f1925bc"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":true,"xColumnTitle":"","xColumn":"timestamp","yColumns":["avgTime"],"seriesColumns":["tenantDescription"],"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"25cd2e5e-a56f-4836-90ec-76bbaaa8403c","title":"Number of signals last 90 days","visualType":"timechart","pageId":"e0ea770f-baf5-47a6-88b1-1cb0ec5dce59","layout":{"x":0,"y":0,"width":21,"height":6},"queryRef":{"kind":"query","queryId":"19e9dfd7-b471-44f1-91e4-8b1ccebf7521"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":true,"xColumnTitle":"","xColumn":null,"yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"827edbab-5dad-4efe-8f09-f4dcb58d82bc","title":"Per Object","visualType":"table","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":9,"width":20,"height":6},"queryRef":{"kind":"query","queryId":"c25942ed-6529-46c4-b237-2dbc164a102e"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"ecba12a3-7689-4c27-afba-87cdf49e78e1","title":"Per Endpoint","visualType":"table","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":15,"width":20,"height":6},"queryRef":{"kind":"query","queryId":"ed79755a-71f3-4cf6-8d35-c6553ccbccb0"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"7e173913-870b-4a69-9612-2b9808f19254","title":"Top 10 Companies","visualType":"bar","pageId":"e0ea770f-baf5-47a6-88b1-1cb0ec5dce59","layout":{"x":0,"y":13,"width":21,"height":7},"queryRef":{"kind":"query","queryId":"5f8bfae0-e479-4e81-ae17-8f3349658772"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":true,"xColumnTitle":"","xColumn":null,"yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"9690b5e2-14b1-43d6-9679-dfc7fcb765e4","title":"Base Query - Sanity check","visualType":"table","pageId":"767419b8-bb1b-4f95-9790-6e9f47cae7a1","layout":{"x":0,"y":20,"width":5,"height":5},"queryRef":{"kind":"query","queryId":"028c6bea-dc9d-44a5-9c13-16f686cf57d6"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"715ec90f-2677-4b05-9519-019044f90a70","title":"Externaldata (TenantDescriptions)","visualType":"table","pageId":"767419b8-bb1b-4f95-9790-6e9f47cae7a1","layout":{"x":8,"y":5,"width":9,"height":7},"queryRef":{"kind":"query","queryId":"d0ae9d37-45d4-404d-8c51-d55154cf8cbe"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"54adc8ae-ac63-4c66-b25b-cf91ae22d747","title":"4.","visualType":"markdownCard","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":86,"width":20,"height":3},"markdownText":"# Slow stuff","visualOptions":{}},{"id":"b00671f6-d51a-4b8e-8bce-7ec63dd93eda","title":"Slowest \"anything\", per customer (Top 100)","visualType":"table","pageId":"142b6efb-d730-4b92-a9f1-c8311c35f795","layout":{"x":0,"y":89,"width":11,"height":7},"queryRef":{"kind":"query","queryId":"3015587d-5adf-4356-8a67-9725cc7cfcdb"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}}],"baseQueries":[{"id":"7a1d5fc7-745d-4394-969c-a8d20e4d9957","queryId":"29a93288-a87b-4760-a2e7-993387c089e5","variableName":"AllSignals"},{"id":"193540ec-c799-464d-955f-703d696e68e3","queryId":"8775d310-d27c-4cc6-92ec-0a9492fb8c2e","variableName":"AllTraces_Customers"},{"id":"ef1f41fe-d48a-484a-a735-784c2780f8ca","queryId":"6316ccb4-4fa4-4ee7-bd59-40c9f74eaef7","variableName":"AllTraces_Distri"},{"id":"cabb2262-deb2-47a7-b3cb-21728bc9383f","queryId":"92f44f09-2357-4902-8a45-a1cd119761d0","variableName":"AllTracesWithDefaultFilters_Customers"},{"id":"5c9316e1-ea20-4c0e-922e-5c3d55ce69e1","queryId":"05b5c274-1fdc-4edd-8164-c8441e98eea1","variableName":"AllTracesWithDefaultFilters_DistriApps"}],"parameters":[{"kind":"duration","id":"39cdef5b-3452-4363-abb8-14af11fec305","displayName":"Time range","description":"","beginVariableName":"_startTime","endVariableName":"_endTime","defaultValue":{"kind":"dynamic","count":1,"unit":"hours"},"showOnPages":{"kind":"all"}},{"kind":"string","selectionType":"freetext","id":"53f0f6f5-2267-429a-8206-737d975dcce7","displayName":"CompanyFilter","variableName":"_CompanyFilter","description":"","defaultValue":{"kind":"all"},"showOnPages":{"kind":"selection","pageIds":["e0ea770f-baf5-47a6-88b1-1cb0ec5dce59"]}},{"kind":"string","selectionType":"freetext","id":"188fb724-d624-493e-a504-ea84e190c35c","displayName":"MessageFilter","variableName":"_MessageFilter","description":"","defaultValue":{"kind":"all"},"showOnPages":{"kind":"selection","pageIds":["767419b8-bb1b-4f95-9790-6e9f47cae7a1","e0ea770f-baf5-47a6-88b1-1cb0ec5dce59","fbdd4db5-d977-4a56-997e-4043d8c0645f","142b6efb-d730-4b92-a9f1-c8311c35f795"]}},{"kind":"string","id":"bb15f72d-08d9-44a3-9ff3-1192ffc5c4ea","displayName":"Area","description":"","variableName":"_Area","selectionType":"array","includeAllOption":true,"defaultValue":{"kind":"all"},"dataSource":{"kind":"query","columns":{"value":"Area"},"queryRef":{"kind":"query","queryId":"4964a105-89b1-4aa7-85d7-4aa446ec7e5e"},"autoReset":true},"showOnPages":{"kind":"selection","pageIds":["767419b8-bb1b-4f95-9790-6e9f47cae7a1"]}},{"kind":"string","id":"89494460-b823-402b-a4b8-19b08049e258","displayName":"entraTenantId","description":"entraTenantId","variableName":"_entraTenantId","selectionType":"array","includeAllOption":true,"defaultValue":{"kind":"all"},"dataSource":{"kind":"query","columns":{"value":"entraTenantId"},"queryRef":{"kind":"query","queryId":"144471c1-a40a-4856-ba47-45b4dabfc470"}},"showOnPages":{"kind":"all"}},{"kind":"string","id":"acf0dd80-5e90-4694-abd9-f57aee6bf9f3","displayName":"ExtensionName","description":"","variableName":"_extensionName","selectionType":"array","includeAllOption":true,"defaultValue":{"kind":"all"},"dataSource":{"kind":"query","columns":{"value":"extensionName"},"queryRef":{"kind":"query","queryId":"9a2b604e-53e0-47bc-b10d-ee2a857a33c5"}},"showOnPages":{"kind":"all"}},{"kind":"string","selectionType":"freetext","id":"9a07b670-cbc8-46e4-b700-2f8a21677ca8","displayName":"TableFilter","variableName":"_tableFilter","description":"","defaultValue":{"kind":"all"},"showOnPages":{"kind":"selection","pageIds":["9c16317e-23f7-4e29-8a61-dfae292ea6d0"]}},{"kind":"string","selectionType":"freetext","id":"9ef8005d-e709-4e8c-887f-8e71a49833e9","displayName":"SourceObjectFilter","variableName":"_sourceObjectFilter","description":"","defaultValue":{"kind":"all"},"showOnPages":{"kind":"selection","pageIds":["e057b00e-7fd8-476e-a00c-3421e7656af8"]}},{"kind":"string","selectionType":"freetext","id":"bcae38f9-9a48-4400-9631-2a0b89b62e4c","displayName":"LockingObjectNameFilter","variableName":"_lockingObjectNameFilter","description":"","defaultValue":{"kind":"all"},"showOnPages":{"kind":"selection","pageIds":["e057b00e-7fd8-476e-a00c-3421e7656af8"]}},{"kind":"string","id":"c74760eb-82d3-4ea6-807f-f87f1462b27e","displayName":"TenantDescription","description":"","variableName":"_TenantDescription","selectionType":"array","includeAllOption":true,"defaultValue":{"kind":"all"},"dataSource":{"kind":"query","columns":{"value":"tenantDescription"},"queryRef":{"kind":"query","queryId":"5f55ca6c-e29b-4b18-a7fa-3075bf6f71c1"}},"showOnPages":{"kind":"all"}}],"dataSources":[{"id":"05ae5610-5603-45ac-9458-616539c1c150","name":"AI-CustomerNST","scopeId":"kusto","clusterUri":"https://ade.applicationinsights.io/subscriptions/a8341168-f467-4146-ba71-5e2e523dccb5","database":"AI-CustomerNST","kind":"manual-kusto"},{"id":"d1beef7f-3df5-4cb4-b1bd-dfa9e1c8ee0d","kind":"manual-kusto","scopeId":"kusto","name":"AI-DistriApps","clusterUri":"https://ade.applicationinsights.io/subscriptions/a8341168-f467-4146-ba71-5e2e523dccb5","database":"AI-DistriApps"}],"pages":[{"name":"Intro ADE","id":"767419b8-bb1b-4f95-9790-6e9f47cae7a1"},{"name":"Usage","id":"e0ea770f-baf5-47a6-88b1-1cb0ec5dce59"},{"name":"Performance","id":"142b6efb-d730-4b92-a9f1-c8311c35f795"},{"name":"Dev Analysis","id":"2546cc61-63e2-4e89-8157-d2977e6ddde6"},{"name":"CT: Custom Events","id":"f56f5822-56bf-4758-a589-1e398df2aeee"},{"name":"CT: Tests","id":"fbdd4db5-d977-4a56-997e-4043d8c0645f"},{"name":"CT: Performance","id":"e057b00e-7fd8-476e-a00c-3421e7656af8"},{"name":"CT: Daily Statistics","id":"9c16317e-23f7-4e29-8a61-dfae292ea6d0"},{"name":"BCPT","id":"c57aad53-d31f-4c8c-a0b7-39424d755d88"}],"queries":[{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n// | where timestamp between (_startTime .. _endTime)// adjust as needed\n// | where aadTenantId has_any (_entraTenantId)\n// | where tenantDescription has_any (_TenantDescription)\n| where isnotempty(customDimensions.environmentType)\n| where isnotempty(customDimensions.companyName)\n| extend companyName = tostring(customDimensions.companyName)\n| extend environmentName = tostring(customDimensions.environmentName)\n| extend IsSaas  = iff(isempty(environmentName) or environmentName in ('common','null','default','undefined'),false,true)\n| extend environmentType = iff(tobool(IsSaas),tostring(customDimensions.environmentType), \n                                iff(isempty(environmentName) or environmentName in ('common','null','default','undefined'),'OnPrem','SaaS'))\n| where environmentType == 'Production'\n    or (environmentName !contains 'TEST'\n    and environmentName !contains 'QA'\n    and environmentName !contains 'TRAINING')\n| summarize by aadTenantId, tenantDescription, companyName, environmentName, environmentType, IsSaas\n| order by IsSaas\n| where companyName contains _CompanyFilter","id":"790eee3d-683d-4568-96a0-a47e2a86b934","usedVariables":["AllTracesWithDefaultFilters_Customers","_CompanyFilter"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"traces\n| where timestamp between (_startTime .. _endTime)\n| where isnotempty(customDimensions.eventId)\n| extend submsg = iif(substring(message, 0, 4) == \"Task\", \"Task Executed\", \n                    iif(customDimensions.eventId == \"AL0000JRG\", \"Job Queue Error\",\n                        iff(indexof(message, \":\") <= 0, message, substring(message, 0, indexof(message, \":\")))))\n| extend eventId = customDimensions.eventId\n    , status = iif(submsg has \"called\" \n                    or submsg has \"executed\"\n                        or submsg has 'executed'\n                            or submsg has 'succeeded'\n                                or submsg has 'rendered'\n                                    or submsg has 'successfully'\n                                        or submsg has 'taken', \"success\",\n                    iif(submsg has \"error\"\n                            or submsg has 'fail'\n                                or submsg has 'failed'\n                                    or submsg has 'deadlock'\n                                        or submsg has 'timed out',\"error\",\n                        iif(message has 'exceeded', 'too slow',\n                            \"unknown\")))\n| where submsg contains _MessageFilter\n| summarize count = count() by tostring(eventId), tostring(submsg), status\n| order by ['count'] desc\n","id":"78993648-5f30-449e-a88c-277d12c1ff66","usedVariables":["_MessageFilter","_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n| where isnotempty(customDimensions.eventId)\n// | where not (customDimensions.eventId startswith \"AL\")\n| extend submsg = iif(substring(message, 0, 4) == \"Task\", \"Task Executed\", \n                    iif(customDimensions.eventId == \"AL0000JRG\", \"Job Queue Error\",\n                        iff(indexof(message, \":\") <= 0, message, substring(message, 0, indexof(message, \":\")))))\n| extend LearnUrl = strcat(\"https://learn.microsoft.com/en-us/search/?scope=BusinessCentral&terms=\", replace_string(submsg,\" \",\"+\"))\n| extend eventId = customDimensions.eventId\n    , status = iif(submsg has \"called\" \n                    or submsg has \"executed\"\n                        or submsg has 'executed'\n                            or submsg has 'succeeded'\n                                or submsg has 'rendered'\n                                    or submsg has 'successfully'\n                                        or submsg has 'taken', \"success\",\n                    iif(submsg has \"error\"\n                            or submsg has 'fail'\n                                or submsg has 'failed'\n                                    or submsg has 'deadlock'\n                                        or submsg has 'timed out',\"error\",\n                        iif(message has 'exceeded', 'too slow',\n                            \"unknown\")))\n| summarize count = count() by tostring(eventId), tostring(submsg), status, LearnUrl\n| project eventId, submsg, status, count, LearnUrl\n| order by ['count'] desc\n","id":"20e94d3a-81d6-43d3-aa86-fd6012b4a74e","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"externaldata(EventID :string, Area:string, Message:string)\n        [h@'https://www.dropbox.com/scl/fi/0oh1kxqldoq6ujf5u45g7/Signals.json?rlkey=057i56lcivyxh0f8pcwq6fcfv&dl=1']\n            with(format='multijson')\n| where Message contains _MessageFilter\n| where Area has_any (_Area);","id":"f424f326-abc1-4ecb-96cf-2b09fea27232","usedVariables":["_Area","_MessageFilter"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"let SignalDefinitions = externaldata(EventID :string, Area:string, Message:string)\n        [h@'https://www.dropbox.com/scl/fi/0oh1kxqldoq6ujf5u45g7/Signals.json?rlkey=057i56lcivyxh0f8pcwq6fcfv&dl=1']\n            with(format='multijson');\nlet AllEvents = traces \n    | where timestamp between (_startTime .. _endTime)\n    | where isnotempty(customDimensions.eventId)\n    | extend eventId = customDimensions.eventId\n    | summarize count = count() by tostring(eventId);\nAllEvents\n| join kind=fullouter SignalDefinitions on $left.eventId == $right.EventID \n| project EventID, eventId, count, Area, Message\n| where Message contains _MessageFilter\n| where Area has_any (_Area)\n| order by ['count'] desc","id":"a84ee158-1f77-43d8-b444-d2ddcec7ec23","usedVariables":["_Area","_MessageFilter","_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"//Custom Events in the base app\ntraces\n| where timestamp between (_startTime .. _endTime) \n| where customDimensions.eventId startswith \"AL\"\n| where customDimensions.extensionPublisher == 'Microsoft'\n| extend eventId = tostring(customDimensions.eventId)\n| extend submsg = iif(substring(message, 0, 4) == \"Task\", \"Task Executed\", \n                    iif(customDimensions.eventId == \"AL0000JRG\", \"Job Queue Error\",\n                        iff(indexof(message, \":\") <= 0, message, substring(message, 0, indexof(message, \":\")))))\n| where submsg contains _MessageFilter\n| summarize count() by eventId, submsg\n| order by count_ desc","id":"38fc41a6-a185-4d33-9189-40b36b62ce48","usedVariables":["_MessageFilter","_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"d1beef7f-3df5-4cb4-b1bd-dfa9e1c8ee0d"},"text":"//Custom Events in everything but Microsoft\ntraces\n| where timestamp between (_startTime .. _endTime) \n| where customDimensions.eventId startswith \"AL\"\n| where customDimensions.extensionPublisher <> 'Microsoft'\n| extend eventId = tostring(customDimensions.eventId)\n| extend submsg = iif(substring(message, 0, 4) == \"Task\", \"Task Executed\", \n                    iif(customDimensions.eventId == \"AL0000JRG\", \"Job Queue Error\",\n                        iff(indexof(message, \":\") <= 0, message, substring(message, 0, indexof(message, \":\")))))\n| where submsg contains _MessageFilter\n| extend extensionPublisher = tostring(customDimensions.extensionPublisher)\n| summarize count() by extensionPublisher, eventId, submsg\n| order by count_ desc","id":"0162183e-37b2-42f8-a2bf-0ae0c194edc9","usedVariables":["_MessageFilter","_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"d1beef7f-3df5-4cb4-b1bd-dfa9e1c8ee0d"},"text":"//TelemetryOnTests - Overview\n\ntraces\n| where timestamp between (_startTime .. _endTime)\n| where tostring(customDimensions.eventId) in (\"ALIFCTST0001\", \"ALIFCTST0002\", \"ALIFCTST0003\")\n| extend\n    timestamp = timestamp\n    , eventId = customDimensions.eventId\n    , TestSuiteName = tostring(customDimensions.alTestSuiteName)\n    , CodeunitId = tostring(customDimensions.alCodeunitId)\n    , CodeunitName = tostring(customDimensions.alName)\n    , MethodName = tostring(customDimensions.alMethodName)\n    , StartTime = tostring(customDimensions.alStartTime)\n    , EndTime = tostring(customDimensions.alEndTime)\n    , NoOfReads = tostring(customDimensions.alNoOfReads)\n    , NoOfSqlStatements = tostring(customDimensions.alNoOfSQLStatements)\n    , DurationMs = tostring(customDimensions.alDurationMs)\n    , Result = tostring(customDimensions.alResult)\n| extend Method = strcat(CodeunitName, '.',MethodName)\n| where Method contains _MessageFilter or message  contains _MessageFilter\n| project\n    timestamp,\n    eventId,\n    TestSuiteName,\n    CodeunitId,\n    CodeunitName,\n    MethodName,\n    StartTime,\n    EndTime,\n    Result,\n    NoOfReads,\n    NoOfSqlStatements,\n    DurationMs\n| order by timestamp desc","id":"3712d86b-102d-41f6-b896-8b1b43dad5d4","usedVariables":["_MessageFilter","_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"d1beef7f-3df5-4cb4-b1bd-dfa9e1c8ee0d"},"text":"//TelemetryOnTests - Overview\nlet BeginningOfPeriod = \ntraces\n| where timestamp between (_startTime .. _startTime + 2d)\n| where tostring(customDimensions.eventId) == \"ALIFCTST0003\"\n| extend CodeunitName = tostring(customDimensions.alName)\n    , MethodName = tostring(customDimensions.alMethodName)\n    , NoOfSqlStatements = toint(customDimensions.alNoOfSQLStatements)\n| extend Method = strcat(CodeunitName,'.',MethodName)\n| where Method contains _MessageFilter or message  contains _MessageFilter\n| summarize avgNoOfSqlStatements=avg(NoOfSqlStatements) by Method;\nlet EndOfPeriod = \ntraces\n| where timestamp between (_endTime - 2d .. _endTime)\n| where tostring(customDimensions.eventId) == \"ALIFCTST0003\"\n| extend CodeunitName = tostring(customDimensions.alName)\n    , MethodName = tostring(customDimensions.alMethodName)\n    , NoOfSqlStatements = toint(customDimensions.alNoOfSQLStatements)\n| extend Method = strcat(CodeunitName,'.',MethodName)\n| where Method contains _MessageFilter or message  contains _MessageFilter\n| summarize avgNoOfSqlStatements=avg(NoOfSqlStatements) by Method;\nlet Difference = \nBeginningOfPeriod\n| join kind=leftouter EndOfPeriod on $left.Method == $right.Method\n| extend Difference =  avgNoOfSqlStatements1 - avgNoOfSqlStatements\n| order by Difference desc\n| take 100;\ntraces\n| where timestamp between (_startTime .. _endTime)\n| where tostring(customDimensions.eventId) == \"ALIFCTST0003\"\n| extend\n    CodeunitId = tostring(customDimensions.alCodeunitId)\n    , CodeunitName = tostring(customDimensions.alName)\n    , MethodName = tostring(customDimensions.alMethodName)\n    , NoOfSqlStatements = toint(customDimensions.alNoOfSQLStatements)\n| extend Method = strcat(CodeunitName,'.',MethodName)\n| join kind=rightouter Difference on $left.Method == $right.Method\n| project timestamp, Method, NoOfSqlStatements\n| summarize avgNoOfSqlStatements=avg(NoOfSqlStatements) by Method, bin(timestamp, 1d)\n| order by Method\n// | summarize count() by Method\n// traces\n// | where timestamp between (_startTime .. _endTime)\n// | where tostring(customDimensions.eventId) == \"ALIFCTST0003\"\n// | extend\n//     CodeunitId = tostring(customDimensions.alCodeunitId)\n//     , CodeunitName = tostring(customDimensions.alName)\n//     , MethodName = tostring(customDimensions.alMethodName)\n//     , NoOfSqlStatements = toint(customDimensions.alNoOfSQLStatements)\n// | extend Method = strcat(CodeunitName,'.',MethodName)\n// | project timestamp, Method, NoOfSqlStatements\n// | join Difference on $left.Method == $right.Method\n// | summarize avgNoOfSqlStatements=avg(NoOfSqlStatements) by Method, bin(timestamp, 1d)\n// | order by Method\n\n","id":"9c8361d8-1c73-497f-906c-01b4e89083d3","usedVariables":["_MessageFilter","_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n| where customDimensions.eventId == 'ALIFCTLM0002'\n| extend Duration = toint(customDimensions.alDuration)\n    , NoSqlStatements = toint(customDimensions.alNoSqlStatements)\n| project timestamp, tenantDescription, message, Duration, NoSqlStatements","id":"beb48049-40f0-43a6-9ff0-6f39597998fa","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n| where customDimensions.eventId == 'ALIFCTLM0002'\n| extend Duration = toint(customDimensions.alDuration)\n    , NoSqlStatements = toint(customDimensions.alNoSqlStatements)\n| project timestamp, tenantDescription, message, Duration, NoSqlStatements\n| summarize count(), avgDuration = toint(avg(Duration)), avgNoSqlStatements = toint(avg(NoSqlStatements)) by message, tenantDescription","id":"13427938-11b9-40ae-8fc0-6aa9f0e5b30b","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n| where customDimensions.eventId == 'ALIFCTLM0002'\n| extend Duration = toint(customDimensions.alDuration)\n    , NoSqlStatements = toint(customDimensions.alNoSqlStatements)\n| project timestamp, tenantDescription, message, Duration, NoSqlStatements\n| summarize avgDuration = toint(avg(Duration)), avgNoSqlStatements = toint(avg(NoSqlStatements)) by message, tenantDescription, bin(timestamp, 1d)","id":"cadd662e-85e6-4b29-a3c5-bc45bdd1741b","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"d1beef7f-3df5-4cb4-b1bd-dfa9e1c8ee0d"},"text":"//Missing indexes Per Index\nAllTracesWithDefaultFilters_DistriApps\n| where customDimensions.eventId == \"ALIFCTLM0001\"\n| extend eventId = tostring(customDimensions.eventId)\n    , CompanyName = tostring(customDimensions.alCompany)\n    , TableName = tostring(customDimensions.alTableName)\n    , EqualityColumns = tostring(customDimensions.alEqualityColumns)\n    , InequalityColumns = tostring(customDimensions.alInequalityColumns)\n    , IncludeColumns = tostring(customDimensions.alIncludeColumns)\n| where TableName contains _tableFilter\n| where CompanyName !contains \"CRONUS\"\n| where CompanyName !contains \"My Company\"\n| project timestamp, tenantDescription, TableName,EqualityColumns,InequalityColumns,IncludeColumns\n// | summarize count_ = count() by TableName,EqualityColumns,InequalityColumns,IncludeColumns\n// | order by TableName,EqualityColumns,InequalityColumns,IncludeColumns\n// | project count_, TableName,EqualityColumns,InequalityColumns,IncludeColumns","id":"e28cb515-0fec-4c44-8487-a7fb20bf1bdb","usedVariables":["AllTracesWithDefaultFilters_DistriApps","_tableFilter"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"//Missing indexes Per Index\nAllTracesWithDefaultFilters_Customers\n| where customDimensions.eventId == \"ALIFCTLM0001\"\n| extend eventId = tostring(customDimensions.eventId)\n    , CompanyName = tostring(customDimensions.alCompany)\n    , TableName = tostring(customDimensions.alTableName)\n    , EqualityColumns = tostring(customDimensions.alEqualityColumns)\n    , InequalityColumns = tostring(customDimensions.alInequalityColumns)\n    , IncludeColumns = tostring(customDimensions.alIncludeColumns)\n| where TableName contains _tableFilter\n| where CompanyName !contains \"CRONUS\"\n| where CompanyName !contains \"My Company\"\n| summarize by bin(timestamp, 1d), aadTenantId, TableName,EqualityColumns,InequalityColumns,IncludeColumns\n| summarize count_ = count() by TableName,EqualityColumns,InequalityColumns,IncludeColumns\n| order by count_ desc \n| project count_,  TableName,EqualityColumns,InequalityColumns,IncludeColumns","id":"b22a3d81-217a-4dcf-b6ab-afe3c24dec62","usedVariables":["AllTracesWithDefaultFilters_Customers","_tableFilter"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n| where timestamp between (_endTime - 1d .. _endTime)\n| where customDimensions contains \"ALIFCTLM0001\"\n| extend eventId = tostring(customDimensions.eventId)\n    , CompanyName = tostring(customDimensions.alCompany)\n    , TableName = tostring(customDimensions.alTableName)\n    , EqualityColumns = tostring(customDimensions.alEqualityColumns)\n    , InequalityColumns = tostring(customDimensions.alInequalityColumns)\n    , IncludeColumns = tostring(customDimensions.alIncludeColumns)\n| where CompanyName !contains \"CRONUS\"\n| where CompanyName !contains \"My Company\"\n| summarize by CompanyName, TableName,EqualityColumns,InequalityColumns,IncludeColumns\n| summarize count_ = count() by CompanyName\n| order by count_ desc \n","id":"c15d3542-0f62-4123-afab-e5ba915d1c0a","usedVariables":["AllTracesWithDefaultFilters_Customers","_endTime"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"//Missing indexes over time\nAllTracesWithDefaultFilters_Customers\n| where customDimensions.eventId == \"ALIFCTLM0001\"\n| extend eventId = tostring(customDimensions.eventId)\n    , CompanyName = tostring(customDimensions.alCompany)\n    , TableName = tostring(customDimensions.alTableName)\n    , EqualityColumns = tostring(customDimensions.alEqualityColumns)\n    , InequalityColumns = tostring(customDimensions.alInequalityColumns)\n    , IncludeColumns = tostring(customDimensions.alIncludeColumns)\n| where CompanyName !contains \"CRONUS\"\n| where CompanyName !contains \"My Company\"\n| summarize by bin(timestamp, 1d), CompanyName, TableName,EqualityColumns,InequalityColumns,IncludeColumns\n| summarize count_ = count() by bin(timestamp, 1d), CompanyName\n| order by count_ desc ","id":"a7083797-148b-40ee-ad8c-b7e247717355","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"//Orphans\n\nAllTracesWithDefaultFilters_Customers\n| where tostring(customDimensions.eventId) in (\"ALIFCTLM0003\", \"ALIFCTLM0004\", \"ALIFCTLM0005\", \"ALIFCTLM0006\")\n| extend aadTenantId = tostring(customDimensions.aadTenantId)\n| project timestamp, tenantDescription, message\n| order by timestamp desc\n","id":"48dd62ab-1345-493a-baec-ea3e3be88683","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"//Orphans Problems!\n\nAllTracesWithDefaultFilters_Customers\n| where tostring(customDimensions.eventId) in (\"ALIFCTLM0003\", \"ALIFCTLM0005\")\n| extend NoOfOrphans = toint(customDimensions.alNoOfOrphans)\n| project timestamp, tenantDescription, message, NoOfOrphans\n| summarize NoOfOrphans = toint(avg(NoOfOrphans)) by bin(timestamp, 1d), tenantDescription, message\n| order by timestamp desc\n","id":"e747255b-9b6d-4eb5-be36-067f4be15540","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"//Orphans Problems!\n\nAllTracesWithDefaultFilters_Customers\n| where timestamp between (_endTime - 1d .. _endTime)\n| where tostring(customDimensions.eventId) in (\"ALIFCTLM0003\", \"ALIFCTLM0005\")\n| extend NoOfOrphans = toint(customDimensions.alNoOfOrphans)\n| project timestamp, tenantDescription, message, NoOfOrphans\n| summarize NoOfOrphans = toint(avg(NoOfOrphans)) by bin(timestamp, 1d), tenantDescription , message\n| order by timestamp desc\n","id":"d51a6336-bbee-4332-9d02-e183e4e0000d","usedVariables":["AllTracesWithDefaultFilters_Customers","_endTime"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"//Many Joins - base query\nAllTracesWithDefaultFilters_Customers\n| where isnotempty(customDimensions.sqlStatement)  // I need to analyze SQL Statement\n| where isnotempty(customDimensions.alStackTrace)  // Actionable\n| where customDimensions.extensionPublisher <> 'Microsoft'\n| extend numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\") \n| where not(customDimensions.alObjectType in (\"Page\")) \n| where customDimensions.sqlStatement startswith \"SELECT\" \n| parse kind=regex tostring(customDimensions.sqlStatement) with selectPart: string \"FROM\" rest: string\n| extend numberOfColumnsSelected = countof(selectPart, \",\") + 1\n    , eventId = tostring(customDimensions.eventId)\n    , userId = user_Id\n    , ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)\n    , clientType = tostring(customDimensions.clientType)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , executionTime = customDimensions.executionTime\n    , executionTimeInMS = toreal(totimespan(customDimensions.executionTime))/10000\n    , extensionId = customDimensions.extensionId\n    // , extensionName = customDimensions.extensionName\n    , extensionPublisher = customDimensions.extensionPublisher\n    , componentVersion = customDimensions.componentVersion\n| extend extensionIdsFromJOIN = tostring( extract_all(\"JOIN \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY\\\\$.+?\\\\$(\\\\S+?)\\\"\", sqlStatement))\n| extend tablename = tostring( extract_all(\"FROM \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY(\\\\$.+?)\\\\$\\\\S+?\\\"\", sqlStatement)[0])\n| project aadTenantId, companyName, componentVersion, extensionPublisher, extensionName, numberOfColumnsSelected, numberOfJoins, executionTimeInMS, ObjectType, ObjectId, ObjectName, StackTrace, eventId, message, clientType, tablename, sqlStatement, extensionIdsFromJOIN\n| order by numberOfColumnsSelected, numberOfJoins desc\n| take 1000\n","id":"7924fd82-b8cf-4f9b-ac28-e3efe231c87f","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"//Many Joins - By Table\nAllTracesWithDefaultFilters_Customers\n| where isnotempty(customDimensions.sqlStatement)\n| where isnotempty(customDimensions.alStackTrace)\n| extend numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\") \n| where not(customDimensions.alObjectType in (\"Page\"))\n| where customDimensions.sqlStatement startswith \"SELECT\"\n| parse kind=regex tostring(customDimensions.sqlStatement) with selectPart: string \"FROM\" rest: string\n| extend numberOfColumnsSelected = countof(selectPart, \",\") + 1\n    , eventId = tostring(customDimensions.eventId)\n    , userId = user_Id\n    , ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)\n    , clientType = tostring(customDimensions.clientType)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , executionTime = customDimensions.executionTime\n    , executionTimeInMS = toreal(totimespan(customDimensions.executionTime))/10000\n    , extensionId = customDimensions.extensionId\n    , extensionPublisher = customDimensions.extensionPublisher\n    , componentVersion = tostring(customDimensions.componentVersion)\n| where numberOfColumnsSelected > 20\n| extend extensionIdsFromJOIN = tostring( extract_all(\"JOIN \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY\\\\$.+?\\\\$(\\\\S+?)\\\"\", sqlStatement))\n| extend tablename = tostring( extract_all(\"FROM \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY(\\\\$.+?)\\\\$\\\\S+?\\\"\", sqlStatement)[0])\n// | project TenantId, extensionPublisher, extensionName, companyName, numberOfColumnsSelected, numberOfJoins, executionTimeInMS, ObjectType, ObjectId, ObjectName, clientType, StackTrace, eventId, message, tablename, sqlStatement, extensionIdsFromJOIN, componentVersion\n| summarize avgExecutionTime = toint(avg(executionTimeInMS)), avgnumberOfColumns = toint(avg(numberOfColumnsSelected)), count = count() by aadTenantId, companyName, componentVersion, extensionName\n| order by avgnumberOfColumns desc \n\n","id":"2219fccb-a948-4c7d-9bfb-66dfd631d4e5","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"//Many Joins - By Table\ntraces\n| where timestamp between (_startTime .. _endTime)\n| where customDimensions.aadTenantId has_any (_entraTenantId)\n| where isnotempty(customDimensions.sqlStatement)\n| where isnotempty(customDimensions.alStackTrace)\n| extend numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\") \n| where numberOfJoins > 2 // adjust as needed\n| where not(customDimensions.alObjectType in (\"Page\"))\n| where customDimensions.sqlStatement startswith \"SELECT\"\n| parse kind=regex tostring(customDimensions.sqlStatement) with selectPart: string \"FROM\" rest: string\n| extend numberOfColumnsSelected = countof(selectPart, \",\") + 1\n    , eventId = tostring(customDimensions.eventId)\n    , TenantId = strcat(customDimensions.aadTenantId)\n    , userId = user_Id\n    , ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)\n    , clientType = tostring(customDimensions.clientType)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , executionTime = customDimensions.executionTime\n    , executionTimeInMS = toreal(totimespan(customDimensions.executionTime))/10000\n    , extensionId = customDimensions.extensionId\n    , extensionName = customDimensions.extensionName\n    , extensionPublisher = customDimensions.extensionPublisher\n| extend extensionIdsFromJOIN = tostring( extract_all(\"JOIN \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY\\\\$.+?\\\\$(\\\\S+?)\\\"\", sqlStatement))\n| extend tablename = tostring( extract_all(\"FROM \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY(\\\\$.+?)\\\\$\\\\S+?\\\"\", sqlStatement)[0])\n| project TenantId, extensionPublisher, extensionName, companyName, numberOfColumnsSelected, numberOfJoins, executionTimeInMS, ObjectType, ObjectId, ObjectName, clientType, StackTrace, eventId, message, tablename, sqlStatement, extensionIdsFromJOIN\n| summarize avgExecutionTime = toint(avg(executionTimeInMS)), avgnumberOfColumns = toint(avg(numberOfColumnsSelected)), count = count() by tablename\n| order by ['count'] desc \n| take 1000\n","id":"cd559135-8e3e-443e-9bf7-aa5eefbd918e","usedVariables":["_endTime","_entraTenantId","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n| where isnotempty(customDimensions.sqlStatement) \n| where isnotempty(customDimensions.alStackTrace) // Actionable\n| where customDimensions.extensionPublisher <> \"Microsoft\"\n| where customDimensions.sqlStatement contains \"SELECT TOP 1 NULL\"\n    and customDimensions.sqlStatement contains \"UPDLOCK\"\n    and customDimensions.sqlStatement startswith \"SELECT\"\n| where not(customDimensions.alObjectType in (\"Page\"))\n| parse kind=regex tostring(customDimensions.sqlStatement) with selectPart: string \"FROM\" rest: string\n| extend numberOfColumnsSelected = countof(selectPart, \",\") + 1\n    , eventId = tostring(customDimensions.eventId)\n    , userId = user_Id\n    , ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)\n    , clientType = tostring(customDimensions.clientType)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , executionTime = customDimensions.executionTime\n    , executionTimeInMS = toreal(totimespan(customDimensions.executionTime))/10000\n    , extensionId = customDimensions.extensionId\n    , extensionPublisher = customDimensions.extensionPublisher\n    , componentVersion = tostring(customDimensions.componentVersion)\n| extend tablename = tostring( extract_all(\"FROM \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY(\\\\$.+?)\\\\$\\\\S+?\\\"\", sqlStatement)[0])\n| project aadTenantId, companyName, componentVersion, extensionPublisher, extensionName\n    , executionTimeInMS, ObjectType, ObjectId, ObjectName, StackTrace, eventId, message, clientType, tablename, sqlStatement,customDimensions\n| take 1000\n","id":"a8cb85e2-d015-4f9c-82af-ddecf9f0c22f","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":" // Any IsEmpty that we can find in Telemetry that is locking\n // By ExtensionName\n\nAllTracesWithDefaultFilters_Customers\n| where isnotempty(customDimensions.sqlStatement) \n| where isnotempty(customDimensions.alStackTrace) // Actionable\n| where customDimensions.extensionPublisher <> \"Microsoft\"\n| where customDimensions.sqlStatement contains \"SELECT TOP 1 NULL\"\n    and customDimensions.sqlStatement contains \"UPDLOCK\"\n    and customDimensions.sqlStatement startswith \"SELECT\"\n| where not(customDimensions.alObjectType in (\"Page\"))\n| parse kind=regex tostring(customDimensions.sqlStatement) with selectPart: string \"FROM\" rest: string\n| extend numberOfColumnsSelected = countof(selectPart, \",\") + 1\n    , eventId = tostring(customDimensions.eventId)\n    , userId = user_Id\n    , ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)\n    , clientType = tostring(customDimensions.clientType)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , executionTime = customDimensions.executionTime\n    , executionTimeInMS = toreal(totimespan(customDimensions.executionTime))/10000\n    , extensionId = customDimensions.extensionId\n    , extensionPublisher = customDimensions.extensionPublisher\n    , componentVersion = tostring(customDimensions.componentVersion)\n| extend extensionIdsFromJOIN = tostring( extract_all(\"JOIN \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY\\\\$.+?\\\\$(\\\\S+?)\\\"\", sqlStatement))\n| extend tablename = tostring( extract_all(\"FROM \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY(\\\\$.+?)\\\\$\\\\S+?\\\"\", sqlStatement)[0])\n// | project TenantId, extensionPublisher, extensionName, companyName, numberOfColumnsSelected, executionTimeInMS, ObjectType, ObjectId, ObjectName, StackTrace, eventId, message, clientType, tablename, sqlStatement, extensionIdsFromJOIN\n| summarize count = count() by tenantDescription,  tostring(extensionName), componentVersion\n| order by count desc \n","id":"7af352fe-0a3b-45f3-914f-4fb283fd7d0f","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n| where isnotempty(customDimensions.sqlStatement) \n| where isnotempty(customDimensions.alStackTrace) // Actionable\n| where customDimensions.extensionPublisher <> \"Microsoft\"\n| where customDimensions.sqlStatement contains \"SELECT SUM\"\n    and customDimensions.sqlStatement contains \"UPDLOCK\"\n    and customDimensions.sqlStatement startswith \"SELECT\"\n| where not(customDimensions.alObjectType in (\"Page\"))\n| parse kind=regex tostring(customDimensions.sqlStatement) with selectPart: string \"FROM\" rest: string\n| extend numberOfColumnsSelected = countof(selectPart, \",\") + 1\n    , eventId = tostring(customDimensions.eventId)\n    , userId = user_Id\n    , ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)\n    , clientType = tostring(customDimensions.clientType)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , executionTime = customDimensions.executionTime\n    , executionTimeInMS = toreal(totimespan(customDimensions.executionTime))/10000\n    , extensionId = customDimensions.extensionId\n    , extensionPublisher = customDimensions.extensionPublisher\n    , componentVersion = tostring(customDimensions.componentVersion)\n| extend tablename = tostring( extract_all(\"FROM \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY(\\\\$.+?)\\\\$\\\\S+?\\\"\", sqlStatement)[0])\n| project aadTenantId, companyName, componentVersion, extensionName, executionTimeInMS, ObjectType, ObjectId, ObjectName, StackTrace, eventId, message, clientType, tablename, sqlStatement,  customDimensions\n| take 1000\n","id":"f84ee372-e0dc-4325-bf8d-9e952d6c64a2","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":" // Any IsEmpty that we can find in Telemetry that is locking\n // By ExtensionName\n\nAllTracesWithDefaultFilters_Customers\n| where isnotempty(customDimensions.sqlStatement) \n| where isnotempty(customDimensions.alStackTrace) // Actionable\n| where customDimensions.extensionPublisher <> \"Microsoft\"\n| where customDimensions.sqlStatement contains \"SELECT SUM\"\n    and customDimensions.sqlStatement contains \"UPDLOCK\"\n    and customDimensions.sqlStatement startswith \"SELECT\"\n| where not(customDimensions.alObjectType in (\"Page\"))\n| parse kind=regex tostring(customDimensions.sqlStatement) with selectPart: string \"FROM\" rest: string\n| extend numberOfColumnsSelected = countof(selectPart, \",\") + 1\n    , eventId = tostring(customDimensions.eventId)\n    , userId = user_Id\n    , ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)\n    , clientType = tostring(customDimensions.clientType)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , executionTime = customDimensions.executionTime\n    , executionTimeInMS = toreal(totimespan(customDimensions.executionTime))/10000\n    , extensionId = customDimensions.extensionId\n    , extensionPublisher = customDimensions.extensionPublisher\n    , componentVersion = tostring(customDimensions.componentVersion)\n| extend extensionIdsFromJOIN = tostring( extract_all(\"JOIN \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY\\\\$.+?\\\\$(\\\\S+?)\\\"\", sqlStatement))\n| extend tablename = tostring( extract_all(\"FROM \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY(\\\\$.+?)\\\\$\\\\S+?\\\"\", sqlStatement)[0])\n// | project TenantId, extensionPublisher, extensionName, companyName, numberOfColumnsSelected, executionTimeInMS, ObjectType, ObjectId, ObjectName, StackTrace, eventId, message, clientType, tablename, sqlStatement, extensionIdsFromJOIN\n| summarize count = count() by tenantDescription,  tostring(extensionName), componentVersion\n| order by count desc \n","id":"42c75489-f183-40fb-99ec-92bae335e88b","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n| where isnotempty(customDimensions.sqlStatement) \n| where isnotempty(customDimensions.alStackTrace) // Actionable\n| where customDimensions.extensionPublisher <> \"Microsoft\"\n| where customDimensions.sqlStatement contains \"SELECT COUNT\"\n    and customDimensions.sqlStatement contains \"UPDLOCK\"\n    and customDimensions.sqlStatement startswith \"SELECT\"\n| where not(customDimensions.alObjectType in (\"Page\"))\n| parse kind=regex tostring(customDimensions.sqlStatement) with selectPart: string \"FROM\" rest: string\n| extend numberOfColumnsSelected = countof(selectPart, \",\") + 1\n    , eventId = tostring(customDimensions.eventId)\n    , userId = user_Id\n    , ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)\n    , clientType = tostring(customDimensions.clientType)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , executionTime = customDimensions.executionTime\n    , executionTimeInMS = toreal(totimespan(customDimensions.executionTime))/10000\n    , extensionId = customDimensions.extensionId\n    , extensionPublisher = customDimensions.extensionPublisher\n    , componentVersion = tostring(customDimensions.componentVersion)\n| extend extensionIdsFromJOIN = tostring( extract_all(\"JOIN \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY\\\\$.+?\\\\$(\\\\S+?)\\\"\", sqlStatement))\n| extend tablename = tostring( extract_all(\"FROM \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY(\\\\$.+?)\\\\$\\\\S+?\\\"\", sqlStatement)[0])\n| project aadTenantId, componentVersion, extensionName, executionTimeInMS, ObjectType, ObjectId, ObjectName, StackTrace, eventId, message, clientType, tablename, sqlStatement, extensionIdsFromJOIN, customDimensions\n| take 1000\n","id":"0af73c00-cc78-45db-a77b-7dd8329916fb","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":" // Any IsEmpty that we can find in Telemetry that is locking\n // By ExtensionName\n\nAllTracesWithDefaultFilters_Customers\n| where isnotempty(customDimensions.sqlStatement) \n| where isnotempty(customDimensions.alStackTrace) // Actionable\n| where customDimensions.extensionPublisher <> \"Microsoft\"\n| where customDimensions.sqlStatement contains \"SELECT COUNT\"\n    and customDimensions.sqlStatement contains \"UPDLOCK\"\n    and customDimensions.sqlStatement startswith \"SELECT\"\n| where not(customDimensions.alObjectType in (\"Page\"))\n| parse kind=regex tostring(customDimensions.sqlStatement) with selectPart: string \"FROM\" rest: string\n| extend numberOfColumnsSelected = countof(selectPart, \",\") + 1\n    , eventId = tostring(customDimensions.eventId)\n    , userId = user_Id\n    , ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)\n    , clientType = tostring(customDimensions.clientType)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , executionTime = customDimensions.executionTime\n    , executionTimeInMS = toreal(totimespan(customDimensions.executionTime))/10000\n    , extensionId = customDimensions.extensionId\n    , extensionPublisher = customDimensions.extensionPublisher\n    , componentVersion = tostring(customDimensions.componentVersion)\n| extend tablename = tostring( extract_all(\"FROM \\\"SQLDATABASE\\\"\\\\.dbo\\\\.\\\"CURRENTCOMPANY(\\\\$.+?)\\\\$\\\\S+?\\\"\", sqlStatement)[0])\n// | project TenantId, extensionPublisher, extensionName, companyName, numberOfColumnsSelected, executionTimeInMS, ObjectType, ObjectId, ObjectName, StackTrace, eventId, message, clientType, tablename, sqlStatement, extensionIdsFromJOIN\n| summarize count = count() by tenantDescription,  tostring(extensionName), componentVersion\n| order by count desc \n","id":"742f33f5-18d7-4bce-89be-054e7451857e","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"    // DeadLocks - Last ones\r\n    AllTracesWithDefaultFilters_Customers\r\n    | where customDimensions has 'RT0028'\r\n    | where customDimensions.eventId == 'RT0028'\r\n    | where customDimensions.alObjectId != '0' \r\n    | where isnotempty(customDimensions.alObjectId)\r\n    | extend ObjectType = tostring(customDimensions.alObjectType)\r\n        , ObjectId = tostring(customDimensions.alObjectId)\r\n        , ObjectName = tostring(customDimensions.alObjectName)\r\n        , sqlStatement = tostring(customDimensions.sqlStatement)\r\n        , companyName = tostring(customDimensions.companyName)        \r\n        , numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\") \r\n        , userId = user_Id\r\n    | extend operationType = case(\r\n        sqlStatement startswith \"UPDATE\", \"UPDATE\"\r\n        , sqlStatement startswith \"DELETE\", \"DELETE\"\r\n        , sqlStatement startswith \"BeginTransaction\", \"BEGIN_TRANS\"\r\n        , sqlStatement matches regex \"INSERT INTO\", \"INSERT\"\r\n        , sqlStatement startswith \"SELECT\", \"SELECT\"\r\n        , sqlStatement matches regex \"IF EXISTS \\\\(SELECT (.*)\\\\) SELECT\", \"SELECT'\"\r\n        , sqlStatement has \"SELECT NEXT VALUE FOR\", \"SELECT_SEQUENCE_VALUE\"\r\n        , sqlStatement has \"SELECT @@SPID\", \"SELECT_SPID\"\r\n        , sqlStatement matches regex \"(.*)WITH\", \"SELECT\"\r\n        , sqlStatement startswith \"CREATE TABLE\", \"CREATE_TABLE\"\r\n        , sqlStatement startswith \"ALTER TABLE\", \"ALTER_TABLE\"\r\n        , sqlStatement startswith \"exec sp_rename\", \"RENAME_TABLE\" \r\n        , sqlStatement matches regex \"(.*)DROP TABLE\", \"DROP_TABLE\"\r\n        , sqlStatement startswith \"SET LOCK_TIMEOUT\", \"SET_LOCK_TIMEOUT\"\r\n        , sqlStatement has \"sp_getapplock\", \"GET_APP_LOCK\"\r\n        , \"UNKNOWN\"\r\n        ) \r\n    | parse kind=regex sqlStatement with selectPart: string \"FROM \\\"SQLDATABASE\\\".dbo.\\\"CURRENTCOMPANY\\\\$\" tablename: string \"\\\\$\" space: string\r\n    | extend splitStacktrace = split(customDimensions.alStackTrace, \"\\n\")\r\n    | extend lengthStacktrace = array_length(splitStacktrace)\r\n    | extend\r\n        LockingObject = splitStacktrace[0],\r\n        SourceProcess = splitStacktrace[lengthStacktrace - 1]\r\n    | project\r\n        timestamp,\r\n        tenantDescription,\r\n        userId,\r\n        companyName,\r\n        ObjectType,\r\n        ObjectId,\r\n        ObjectName,\r\n        numberOfJoins,\r\n        LockingObject,\r\n        SourceProcess,\r\n        operationType,\r\n        sqlStatement,\r\n        splitStacktrace,\r\n        customDimensions\r\n    | order by timestamp desc \r\n\r\n","id":"8bac629d-6bfd-4930-83de-92e2269e0d6f","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"// DeadLocks - By Customer\n\nAllTracesWithDefaultFilters_Customers\n| where customDimensions has 'RT0028'\n| where customDimensions.eventId == 'RT0028'\n| where customDimensions.alObjectId != '0' \n| where isnotempty(customDimensions.alObjectId)\n| extend ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)        \n    , numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\") \n    , stackTrace = tostring(customDimensions.alStackTrace)\n    , componentVersion = tostring(customDimensions.componentVersion)\n    , userId = user_Id\n| parse kind=regex sqlStatement with selectPart: string \"FROM \" tablename: string\n| project timestamp, companyName, componentVersion, ObjectType, ObjectId, ObjectName, numberOfJoins, stackTrace, sqlStatement, tablename, customDimensions\n| summarize count = count() by companyName, componentVersion\n| order by count desc \n\n","id":"1ea6c66c-8957-486d-a3e8-a8460e9525aa","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"// DeadLocks - By Day\n\nAllTracesWithDefaultFilters_Customers\n| where customDimensions has 'RT0028'\n| where customDimensions.eventId == 'RT0028'\n| where isnotempty(customDimensions.aadTenantId) // filter away signal from Docker sandboxes\n| where customDimensions.alObjectId != '0' \n| where isnotempty(customDimensions.alObjectId)\n| extend ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)        \n    , numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\") \n    , stackTrace = tostring(customDimensions.alStackTrace)\n    , userId = user_Id\n| parse kind=regex sqlStatement with selectPart: string \"FROM \" tablename: string\n| project timestamp, tenantDescription, companyName, ObjectType, ObjectId, ObjectName, numberOfJoins, stackTrace, sqlStatement, tablename, customDimensions\n| summarize count = count() by bin(timestamp, 1h), companyName\n","id":"4be30777-e2ea-43e4-b03e-ea7948383dca","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"// DeadLocks - by Source Process\n\nAllTracesWithDefaultFilters_Customers\n| where customDimensions.eventId == 'RT0028'\n| where isnotempty(customDimensions.aadTenantId) // filter away signal from Docker sandboxes\n| where customDimensions.alObjectId != '0' \n| where isnotempty(customDimensions.alObjectId)\n| extend ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)        \n    , numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\")\n    , EventId = tostring(customDimensions.eventId)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , componentVersion = tostring(customDimensions.componentVersion)\n    , userId = user_Id\n| extend operationType = case(\n    sqlStatement startswith \"UPDATE\", \"UPDATE\"\n    , sqlStatement startswith \"DELETE\", \"DELETE\"\n    , sqlStatement startswith \"BeginTransaction\", \"BEGIN_TRANS\"\n    , sqlStatement matches regex \"INSERT INTO\", \"INSERT\"\n    , sqlStatement startswith \"SELECT\", \"SELECT\"\n    , sqlStatement matches regex \"IF EXISTS \\\\(SELECT (.*)\\\\) SELECT\", \"SELECT'\"\n    , sqlStatement has \"SELECT NEXT VALUE FOR\", \"SELECT_SEQUENCE_VALUE\"\n    , sqlStatement has \"SELECT @@SPID\", \"SELECT_SPID\"\n    , sqlStatement matches regex \"(.*)WITH\", \"SELECT\"\n    , sqlStatement startswith \"CREATE TABLE\", \"CREATE_TABLE\"\n    , sqlStatement startswith \"ALTER TABLE\", \"ALTER_TABLE\"\n    , sqlStatement startswith \"exec sp_rename\", \"RENAME_TABLE\" \n    , sqlStatement matches regex \"(.*)DROP TABLE\", \"DROP_TABLE\"\n    , sqlStatement startswith \"SET LOCK_TIMEOUT\", \"SET_LOCK_TIMEOUT\"\n    , sqlStatement has \"sp_getapplock\", \"GET_APP_LOCK\"\n    , \"UNKNOWN\"\n    ) \n| parse kind=regex sqlStatement with selectPart: string \"FROM \\\"SQLDATABASE\\\".dbo.\\\"CURRENTCOMPANY\\\\$\" tablename: string \"\\\\$\" space: string\n| extend splitStacktrace = split(customDimensions.alStackTrace, \"\\n\")\n| extend lengthStacktrace = array_length(splitStacktrace)\n| extend\n    topOfStackline = tostring(splitStacktrace[0]),\n    bottomOfStackline = tostring(splitStacktrace[lengthStacktrace - 1])\n| extend topOfStackObjectName = extract('\\\\\\\"?([^\\\\\\\"]+)\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\)', 1, topOfStackline)\n| extend topOfStackObjectType = extract('\\\\(([a-zA-Z]+) \\\\d+\\\\)', 1, topOfStackline)\n| extend topOfStackObjectId = extract('\\\\([a-zA-Z]+ (\\\\d+)\\\\)', 1, topOfStackline)\n| extend topOfStackLineNumber = extract(' line (\\\\d+)', 1, topOfStackline)\n| extend topOfStackExtensionName = case (\n    isnotempty(topOfStackLineNumber), extract('line \\\\d+ - (.+) by', 1, topOfStackline),\n    extract(' - (.+) by', 1, topOfStackline)\n    )\n| extend topOfStackPublisher = extract('.+ by (.+)', 1, topOfStackline)\n| extend topOfStackWhatWasCalled = case(\n    isnotempty(topOfStackLineNumber), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) line', 1, topOfStackline),\n    isnotempty(topOfStackExtensionName), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) -(.+) by (.+)', 1, topOfStackline),\n    extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+)', 1, topOfStackline)\n    )\n| extend bottomOfStackObjectName = extract('\\\\\\\"?([^\\\\\\\"]+)\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackObjectType = extract('\\\\(([a-zA-Z]+) \\\\d+\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackObjectId = extract('\\\\([a-zA-Z]+ (\\\\d+)\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackLineNumber = extract(' line (\\\\d+)', 1, bottomOfStackline)\n| extend bottomOfStackExtensionName = case (\n    isnotempty(bottomOfStackLineNumber), extract('line \\\\d+ - (.+) by', 1, bottomOfStackline),\n    extract(' - (.+) by', 1, bottomOfStackline)\n    )\n| extend bottomOfStackPublisher = extract('.+ by (.+)', 1, bottomOfStackline)\n| extend bottomOfStackWhatWasCalled = case(\n    isnotempty(bottomOfStackLineNumber), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) line', 1, bottomOfStackline),\n    isnotempty(bottomOfStackExtensionName), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) -(.+) by (.+)', 1, bottomOfStackline),\n    extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+)', 1, bottomOfStackline)\n    )\n| extend SourceProcess = strcat(bottomOfStackWhatWasCalled , \" - \", bottomOfStackObjectType, \" \", bottomOfStackObjectId, \" \", bottomOfStackObjectName, \" (\", bottomOfStackExtensionName, \")\")\n    , LockingObject = strcat(topOfStackObjectType, \" '\", topOfStackObjectName,\"'\")\n    , LockingObjectId = tostring(topOfStackObjectId)\n    , LockingObjectMethod = tostring(topOfStackWhatWasCalled)\n    , LockingObjectExtension = tostring(topOfStackExtensionName)\n| project\n    timestamp,\n    aadTenantId,\n    tenantDescription,\n    companyName,\n    ObjectType,\n    ObjectId,\n    ObjectName,\n    operationType,\n    numberOfJoins,\n    LockingObject,\n    LockingObjectId,\n    LockingObjectMethod,\n    LockingObjectExtension,\n    topOfStackPublisher,\n    SourceProcess,\n    StackTrace,\n    customDimensions,\n    componentVersion,\n    sqlStatement\n| extend ExtensionName = iif(LockingObjectExtension contains \"iFacto\" \n        or LockingObjectExtension contains \"Single\"\n        or LockingObjectExtension contains \"Distri\"\n        or LockingObjectExtension contains \"Commerce\"\n        or topOfStackPublisher contains \"Microsoft\"\n            , LockingObjectExtension, 'PTE')\n| summarize count = count() by componentVersion, tostring(SourceProcess), tostring(companyName), tostring(ExtensionName), tostring(LockingObject), tostring(LockingObjectId), tostring(LockingObjectMethod),tostring(operationType)\n| order by ['count'],SourceProcess desc \n\n\n","id":"92151635-da94-4eb9-a00a-4bacfebe36f8","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"// DeadLocks - by Source Process\n\nAllTracesWithDefaultFilters_Customers\n| where customDimensions.eventId == 'RT0028'\n| where customDimensions.alObjectId != '0' \n| where isnotempty(customDimensions.alObjectId)\n| extend ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)        \n    , numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\")\n    , EventId = tostring(customDimensions.eventId)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , userId = user_Id\n| extend operationType = case(\n    sqlStatement startswith \"UPDATE\", \"UPDATE\"\n    , sqlStatement startswith \"DELETE\", \"DELETE\"\n    , sqlStatement startswith \"BeginTransaction\", \"BEGIN_TRANS\"\n    , sqlStatement matches regex \"INSERT INTO\", \"INSERT\"\n    , sqlStatement startswith \"SELECT\", \"SELECT\"\n    , sqlStatement matches regex \"IF EXISTS \\\\(SELECT (.*)\\\\) SELECT\", \"SELECT'\"\n    , sqlStatement has \"SELECT NEXT VALUE FOR\", \"SELECT_SEQUENCE_VALUE\"\n    , sqlStatement has \"SELECT @@SPID\", \"SELECT_SPID\"\n    , sqlStatement matches regex \"(.*)WITH\", \"SELECT\"\n    , sqlStatement startswith \"CREATE TABLE\", \"CREATE_TABLE\"\n    , sqlStatement startswith \"ALTER TABLE\", \"ALTER_TABLE\"\n    , sqlStatement startswith \"exec sp_rename\", \"RENAME_TABLE\" \n    , sqlStatement matches regex \"(.*)DROP TABLE\", \"DROP_TABLE\"\n    , sqlStatement startswith \"SET LOCK_TIMEOUT\", \"SET_LOCK_TIMEOUT\"\n    , sqlStatement has \"sp_getapplock\", \"GET_APP_LOCK\"\n    , \"UNKNOWN\"\n    ) \n| parse kind=regex sqlStatement with selectPart: string \"FROM \\\"SQLDATABASE\\\".dbo.\\\"CURRENTCOMPANY\\\\$\" tablename: string \"\\\\$\" space: string\n| extend splitStacktrace = split(customDimensions.alStackTrace, \"\\n\")\n| extend lengthStacktrace = array_length(splitStacktrace)\n| extend\n    topOfStackline = tostring(splitStacktrace[0]),\n    bottomOfStackline = tostring(splitStacktrace[lengthStacktrace - 1])\n| extend topOfStackObjectName = extract('\\\\\\\"?([^\\\\\\\"]+)\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\)', 1, topOfStackline)\n| extend topOfStackObjectType = extract('\\\\(([a-zA-Z]+) \\\\d+\\\\)', 1, topOfStackline)\n| extend topOfStackObjectId = extract('\\\\([a-zA-Z]+ (\\\\d+)\\\\)', 1, topOfStackline)\n| extend topOfStackLineNumber = extract(' line (\\\\d+)', 1, topOfStackline)\n| extend topOfStackExtensionName = case (\n    isnotempty(topOfStackLineNumber), extract('line \\\\d+ - (.+) by', 1, topOfStackline),\n    extract(' - (.+) by', 1, topOfStackline)\n    )\n| extend topOfStackPublisher = extract('.+ by (.+)', 1, topOfStackline)\n| extend topOfStackWhatWasCalled = case(\n    isnotempty(topOfStackLineNumber), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) line', 1, topOfStackline),\n    isnotempty(topOfStackExtensionName), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) -(.+) by (.+)', 1, topOfStackline),\n    extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+)', 1, topOfStackline)\n    )\n| extend bottomOfStackObjectName = extract('\\\\\\\"?([^\\\\\\\"]+)\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackObjectType = extract('\\\\(([a-zA-Z]+) \\\\d+\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackObjectId = extract('\\\\([a-zA-Z]+ (\\\\d+)\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackLineNumber = extract(' line (\\\\d+)', 1, bottomOfStackline)\n| extend bottomOfStackExtensionName = case (\n    isnotempty(bottomOfStackLineNumber), extract('line \\\\d+ - (.+) by', 1, bottomOfStackline),\n    extract(' - (.+) by', 1, bottomOfStackline)\n    )\n| extend bottomOfStackPublisher = extract('.+ by (.+)', 1, bottomOfStackline)\n| extend bottomOfStackWhatWasCalled = case(\n    isnotempty(bottomOfStackLineNumber), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) line', 1, bottomOfStackline),\n    isnotempty(bottomOfStackExtensionName), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) -(.+) by (.+)', 1, bottomOfStackline),\n    extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+)', 1, bottomOfStackline)\n    )\n| extend SourceProcess = strcat(bottomOfStackWhatWasCalled , \" - \", bottomOfStackObjectType, \" \", bottomOfStackObjectId, \" \", bottomOfStackObjectName, \" (\", bottomOfStackExtensionName, \")\")\n    , LockingObject = strcat(topOfStackObjectType, \" '\", topOfStackObjectName,\"'\")\n    , LockingObjectId = tostring(topOfStackObjectId)\n    , LockingObjectMethod = tostring(topOfStackWhatWasCalled)\n    , LockingObjectExtension = tostring(topOfStackExtensionName)\n| project\n    timestamp,\n    aadTenantId,\n    companyName,\n    ObjectType,\n    ObjectId,\n    ObjectName,\n    operationType,\n    numberOfJoins,\n    LockingObject,\n    LockingObjectId,\n    LockingObjectMethod,\n    LockingObjectExtension,    \n    SourceProcess,\n    StackTrace,\n    customDimensions\n| summarize count = count() by tostring(LockingObject)\n| order by ['count'],LockingObject desc \n\n\n","id":"ccb061ab-9e56-47d0-8305-74156b631512","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"// DeadLocks - by Source Process\n\nAllTracesWithDefaultFilters_Customers\n| where customDimensions.eventId == 'RT0028'\n| where customDimensions.alObjectId != '0' \n| where isnotempty(customDimensions.alObjectId)\n| extend ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)        \n    , numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\")\n    , EventId = tostring(customDimensions.eventId)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , userId = user_Id\n| extend operationType = case(\n    sqlStatement startswith \"UPDATE\", \"UPDATE\"\n    , sqlStatement startswith \"DELETE\", \"DELETE\"\n    , sqlStatement startswith \"BeginTransaction\", \"BEGIN_TRANS\"\n    , sqlStatement matches regex \"INSERT INTO\", \"INSERT\"\n    , sqlStatement startswith \"SELECT\", \"SELECT\"\n    , sqlStatement matches regex \"IF EXISTS \\\\(SELECT (.*)\\\\) SELECT\", \"SELECT'\"\n    , sqlStatement has \"SELECT NEXT VALUE FOR\", \"SELECT_SEQUENCE_VALUE\"\n    , sqlStatement has \"SELECT @@SPID\", \"SELECT_SPID\"\n    , sqlStatement matches regex \"(.*)WITH\", \"SELECT\"\n    , sqlStatement startswith \"CREATE TABLE\", \"CREATE_TABLE\"\n    , sqlStatement startswith \"ALTER TABLE\", \"ALTER_TABLE\"\n    , sqlStatement startswith \"exec sp_rename\", \"RENAME_TABLE\" \n    , sqlStatement matches regex \"(.*)DROP TABLE\", \"DROP_TABLE\"\n    , sqlStatement startswith \"SET LOCK_TIMEOUT\", \"SET_LOCK_TIMEOUT\"\n    , sqlStatement has \"sp_getapplock\", \"GET_APP_LOCK\"\n    , \"UNKNOWN\"\n    ) \n| parse kind=regex sqlStatement with selectPart: string \"FROM \\\"SQLDATABASE\\\".dbo.\\\"CURRENTCOMPANY\\\\$\" tablename: string \"\\\\$\" space: string\n| extend splitStacktrace = split(customDimensions.alStackTrace, \"\\n\")\n| extend lengthStacktrace = array_length(splitStacktrace)\n| extend\n    topOfStackline = tostring(splitStacktrace[0]),\n    bottomOfStackline = tostring(splitStacktrace[lengthStacktrace - 1])\n| extend topOfStackObjectName = extract('\\\\\\\"?([^\\\\\\\"]+)\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\)', 1, topOfStackline)\n| extend topOfStackObjectType = extract('\\\\(([a-zA-Z]+) \\\\d+\\\\)', 1, topOfStackline)\n| extend topOfStackObjectId = extract('\\\\([a-zA-Z]+ (\\\\d+)\\\\)', 1, topOfStackline)\n| extend topOfStackLineNumber = extract(' line (\\\\d+)', 1, topOfStackline)\n| extend topOfStackExtensionName = case (\n    isnotempty(topOfStackLineNumber), extract('line \\\\d+ - (.+) by', 1, topOfStackline),\n    extract(' - (.+) by', 1, topOfStackline)\n    )\n| extend topOfStackPublisher = extract('.+ by (.+)', 1, topOfStackline)\n| extend topOfStackWhatWasCalled = case(\n    isnotempty(topOfStackLineNumber), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) line', 1, topOfStackline),\n    isnotempty(topOfStackExtensionName), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) -(.+) by (.+)', 1, topOfStackline),\n    extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+)', 1, topOfStackline)\n    )\n| extend bottomOfStackObjectName = extract('\\\\\\\"?([^\\\\\\\"]+)\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackObjectType = extract('\\\\(([a-zA-Z]+) \\\\d+\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackObjectId = extract('\\\\([a-zA-Z]+ (\\\\d+)\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackLineNumber = extract(' line (\\\\d+)', 1, bottomOfStackline)\n| extend bottomOfStackExtensionName = case (\n    isnotempty(bottomOfStackLineNumber), extract('line \\\\d+ - (.+) by', 1, bottomOfStackline),\n    extract(' - (.+) by', 1, bottomOfStackline)\n    )\n| extend bottomOfStackPublisher = extract('.+ by (.+)', 1, bottomOfStackline)\n| extend bottomOfStackWhatWasCalled = case(\n    isnotempty(bottomOfStackLineNumber), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) line', 1, bottomOfStackline),\n    isnotempty(bottomOfStackExtensionName), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) -(.+) by (.+)', 1, bottomOfStackline),\n    extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+)', 1, bottomOfStackline)\n    )\n| extend SourceProcess = strcat(bottomOfStackWhatWasCalled , \" - \", bottomOfStackObjectType, \" \", bottomOfStackObjectId, \" \", bottomOfStackObjectName, \" (\", bottomOfStackExtensionName, \")\")\n    , LockingObject = strcat(topOfStackObjectType, \" '\", topOfStackObjectName,\"'\")\n    , LockingObjectId = tostring(topOfStackObjectId)\n    , LockingObjectMethod = tostring(topOfStackWhatWasCalled)\n    , LockingObjectExtension = tostring(topOfStackExtensionName)\n| project\n    timestamp,\n    aadTenantId,\n    tenantDescription,\n    companyName,\n    ObjectType,\n    ObjectId,\n    ObjectName,\n    operationType,\n    numberOfJoins,\n    LockingObject,\n    LockingObjectId,\n    LockingObjectMethod,\n    LockingObjectExtension,    \n    SourceProcess,\n    StackTrace,\n    customDimensions\n| summarize count = count() by tostring(SourceProcess)\n| order by ['count'],SourceProcess desc \n\n\n","id":"93affb39-b5d2-44cb-9542-9594cb9283a7","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"// Lock Timeouts - Last ones\r\nAllTracesWithDefaultFilters_Customers\r\n| where customDimensions has 'RT0012'\r\n| where customDimensions.eventId == 'RT0012'\r\n| where isnotempty(customDimensions.aadTenantId) // filter away signal from Docker sandboxes\r\n| where customDimensions.alObjectId != '0' \r\n| where isnotempty(customDimensions.alObjectId)\r\n| extend ObjectType = tostring(customDimensions.alObjectType)\r\n    , ObjectId = tostring(customDimensions.alObjectId)\r\n    , ObjectName = tostring(customDimensions.alObjectName)\r\n    , sqlStatement = tostring(customDimensions.sqlStatement)\r\n    , companyName = tostring(customDimensions.companyName)        \r\n    , numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\") \r\n    , userId = user_Id\r\n| extend operationType = case(\r\n    sqlStatement startswith \"UPDATE\", \"UPDATE\"\r\n    , sqlStatement startswith \"DELETE\", \"DELETE\"\r\n    , sqlStatement startswith \"BeginTransaction\", \"BEGIN_TRANS\"\r\n    , sqlStatement matches regex \"INSERT INTO\", \"INSERT\"\r\n    , sqlStatement startswith \"SELECT\", \"SELECT\"\r\n    , sqlStatement matches regex \"IF EXISTS \\\\(SELECT (.*)\\\\) SELECT\", \"SELECT'\"\r\n    , sqlStatement has \"SELECT NEXT VALUE FOR\", \"SELECT_SEQUENCE_VALUE\"\r\n    , sqlStatement has \"SELECT @@SPID\", \"SELECT_SPID\"\r\n    , sqlStatement matches regex \"(.*)WITH\", \"SELECT\"\r\n    , sqlStatement startswith \"CREATE TABLE\", \"CREATE_TABLE\"\r\n    , sqlStatement startswith \"ALTER TABLE\", \"ALTER_TABLE\"\r\n    , sqlStatement startswith \"exec sp_rename\", \"RENAME_TABLE\" \r\n    , sqlStatement matches regex \"(.*)DROP TABLE\", \"DROP_TABLE\"\r\n    , sqlStatement startswith \"SET LOCK_TIMEOUT\", \"SET_LOCK_TIMEOUT\"\r\n    , sqlStatement has \"sp_getapplock\", \"GET_APP_LOCK\"\r\n    , \"UNKNOWN\"\r\n    ) \r\n| parse kind=regex sqlStatement with selectPart: string \"FROM \\\"SQLDATABASE\\\".dbo.\\\"CURRENTCOMPANY\\\\$\" tablename: string \"\\\\$\" space: string\r\n| extend splitStacktrace = split(customDimensions.alStackTrace, \"\\n\")\r\n| extend lengthStacktrace = array_length(splitStacktrace)\r\n| extend\r\n    LockingObject = splitStacktrace[0],\r\n    SourceProcess = splitStacktrace[lengthStacktrace - 1]\r\n| where SourceProcess contains _sourceObjectFilter\r\n| where LockingObject contains _lockingObjectNameFilter\r\n| project\r\n    timestamp,\r\n    aadTenantId,\r\n    tenantDescription,\r\n    userId,\r\n    companyName,\r\n    ObjectType,\r\n    ObjectId,\r\n    ObjectName,\r\n    numberOfJoins,\r\n    LockingObject,\r\n    SourceProcess,\r\n    operationType,\r\n    sqlStatement,\r\n    splitStacktrace,\r\n    customDimensions\r\n| order by timestamp desc \r\n\r\n","id":"b333a79f-0f03-4d95-818d-f0088dd7daad","usedVariables":["AllTracesWithDefaultFilters_Customers","_lockingObjectNameFilter","_sourceObjectFilter"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"// DeadLocks - By Customer\n\nAllTracesWithDefaultFilters_Customers\n| where customDimensions has 'RT0012'\n| where customDimensions.eventId == 'RT0012'\n| where isnotempty(customDimensions.aadTenantId) // filter away signal from Docker sandboxes\n| where customDimensions.alObjectId != '0' \n| where isnotempty(customDimensions.alObjectId)\n| extend ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)        \n    , numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\") \n    , stackTrace = tostring(customDimensions.alStackTrace)\n    , componentVersion = tostring(customDimensions.componentVersion)\n    , userId = user_Id\n| parse kind=regex sqlStatement with selectPart: string \"FROM \" tablename: string\n    | extend splitStacktrace = split(customDimensions.alStackTrace, \"\\n\")\n    | extend lengthStacktrace = array_length(splitStacktrace)\n    | extend\n        LockingObject = splitStacktrace[0],\n        SourceProcess = splitStacktrace[lengthStacktrace - 1]\n    | where SourceProcess contains _sourceObjectFilter\n    | where LockingObject contains _lockingObjectNameFilter\n| project timestamp, tenantDescription, componentVersion, companyName, ObjectType, ObjectId, ObjectName, numberOfJoins, stackTrace, sqlStatement, tablename, customDimensions\n| summarize count = count() by companyName, componentVersion\n| order by count desc \n\n","id":"389c5957-9aff-4d94-8b0d-368d2372d521","usedVariables":["AllTracesWithDefaultFilters_Customers","_lockingObjectNameFilter","_sourceObjectFilter"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"// Lock Timeouts - By Day\n\nAllTracesWithDefaultFilters_Customers\n| where customDimensions has 'RT0012'\n| where customDimensions.eventId == 'RT0012'\n| where isnotempty(customDimensions.aadTenantId) // filter away signal from Docker sandboxes\n| where customDimensions.alObjectId != '0' \n| where isnotempty(customDimensions.alObjectId)\n| extend ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)        \n    , numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\") \n    , stackTrace = tostring(customDimensions.alStackTrace)\n    , userId = user_Id\n| parse kind=regex sqlStatement with selectPart: string \"FROM \" tablename: string\n| project timestamp, tenantDescription, companyName, ObjectType, ObjectId, ObjectName, numberOfJoins, stackTrace, sqlStatement, tablename, customDimensions\n| summarize count = count() by bin(timestamp, 1h), companyName\n","id":"b8f08134-adb5-46bf-acd7-89bd9872eb4b","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"// Lock Timeouts - by Source Process\n\nAllTracesWithDefaultFilters_Customers\n| where customDimensions.eventId == 'RT0012'\n| where isnotempty(customDimensions.aadTenantId) // filter away signal from Docker sandboxes\n| where customDimensions.alObjectId != '0' \n| where isnotempty(customDimensions.alObjectId)\n| extend ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)        \n    , numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\")\n    , EventId = tostring(customDimensions.eventId)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , userId = user_Id\n| extend operationType = case(\n    sqlStatement startswith \"UPDATE\", \"UPDATE\"\n    , sqlStatement startswith \"DELETE\", \"DELETE\"\n    , sqlStatement startswith \"BeginTransaction\", \"BEGIN_TRANS\"\n    , sqlStatement matches regex \"INSERT INTO\", \"INSERT\"\n    , sqlStatement startswith \"SELECT\", \"SELECT\"\n    , sqlStatement matches regex \"IF EXISTS \\\\(SELECT (.*)\\\\) SELECT\", \"SELECT'\"\n    , sqlStatement has \"SELECT NEXT VALUE FOR\", \"SELECT_SEQUENCE_VALUE\"\n    , sqlStatement has \"SELECT @@SPID\", \"SELECT_SPID\"\n    , sqlStatement matches regex \"(.*)WITH\", \"SELECT\"\n    , sqlStatement startswith \"CREATE TABLE\", \"CREATE_TABLE\"\n    , sqlStatement startswith \"ALTER TABLE\", \"ALTER_TABLE\"\n    , sqlStatement startswith \"exec sp_rename\", \"RENAME_TABLE\" \n    , sqlStatement matches regex \"(.*)DROP TABLE\", \"DROP_TABLE\"\n    , sqlStatement startswith \"SET LOCK_TIMEOUT\", \"SET_LOCK_TIMEOUT\"\n    , sqlStatement has \"sp_getapplock\", \"GET_APP_LOCK\"\n    , \"UNKNOWN\"\n    ) \n| parse kind=regex sqlStatement with selectPart: string \"FROM \\\"SQLDATABASE\\\".dbo.\\\"CURRENTCOMPANY\\\\$\" tablename: string \"\\\\$\" space: string\n| extend splitStacktrace = split(customDimensions.alStackTrace, \"\\n\")\n| extend lengthStacktrace = array_length(splitStacktrace)\n| extend\n    topOfStackline = tostring(splitStacktrace[0]),\n    bottomOfStackline = tostring(splitStacktrace[lengthStacktrace - 1])\n| extend topOfStackObjectName = extract('\\\\\\\"?([^\\\\\\\"]+)\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\)', 1, topOfStackline)\n| extend topOfStackObjectType = extract('\\\\(([a-zA-Z]+) \\\\d+\\\\)', 1, topOfStackline)\n| extend topOfStackObjectId = extract('\\\\([a-zA-Z]+ (\\\\d+)\\\\)', 1, topOfStackline)\n| extend topOfStackLineNumber = extract(' line (\\\\d+)', 1, topOfStackline)\n| extend topOfStackExtensionName = case (\n    isnotempty(topOfStackLineNumber), extract('line \\\\d+ - (.+) by', 1, topOfStackline),\n    extract(' - (.+) by', 1, topOfStackline)\n    )\n| extend topOfStackPublisher = extract('.+ by (.+)', 1, topOfStackline)\n| extend topOfStackWhatWasCalled = case(\n    isnotempty(topOfStackLineNumber), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) line', 1, topOfStackline),\n    isnotempty(topOfStackExtensionName), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) -(.+) by (.+)', 1, topOfStackline),\n    extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+)', 1, topOfStackline)\n    )\n| extend bottomOfStackObjectName = extract('\\\\\\\"?([^\\\\\\\"]+)\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackObjectType = extract('\\\\(([a-zA-Z]+) \\\\d+\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackObjectId = extract('\\\\([a-zA-Z]+ (\\\\d+)\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackLineNumber = extract(' line (\\\\d+)', 1, bottomOfStackline)\n| extend bottomOfStackExtensionName = case (\n    isnotempty(bottomOfStackLineNumber), extract('line \\\\d+ - (.+) by', 1, bottomOfStackline),\n    extract(' - (.+) by', 1, bottomOfStackline)\n    )\n| extend bottomOfStackPublisher = extract('.+ by (.+)', 1, bottomOfStackline)\n| extend bottomOfStackWhatWasCalled = case(\n    isnotempty(bottomOfStackLineNumber), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) line', 1, bottomOfStackline),\n    isnotempty(bottomOfStackExtensionName), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) -(.+) by (.+)', 1, bottomOfStackline),\n    extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+)', 1, bottomOfStackline)\n    )\n| extend SourceProcess = strcat(bottomOfStackWhatWasCalled , \" - \", bottomOfStackObjectType, \" \", bottomOfStackObjectId, \" \", bottomOfStackObjectName, \" (\", bottomOfStackExtensionName, \")\")\n    , LockingObject = strcat(topOfStackObjectType, \" '\", topOfStackObjectName,\"'\")\n    , LockingObjectId = tostring(topOfStackObjectId)\n    , LockingObjectMethod = tostring(topOfStackWhatWasCalled)\n    , LockingObjectExtension = tostring(topOfStackExtensionName)\n| project\n    timestamp,\n    aadTenantId,\n    companyName,\n    ObjectType,\n    ObjectId,\n    ObjectName,\n    operationType,\n    numberOfJoins,\n    LockingObject,\n    LockingObjectId,\n    LockingObjectMethod,\n    LockingObjectExtension,    \n    SourceProcess,\n    StackTrace,\n    customDimensions\n| summarize count = count() by tostring(SourceProcess)\n| order by ['count'],SourceProcess desc \n\n\n","id":"78734f4d-ca59-44a0-835f-594f7c588b28","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"// DeadLocks - by Source Process\n\nAllTracesWithDefaultFilters_Customers\n| where customDimensions.eventId == 'RT0012'\n| where isnotempty(customDimensions.aadTenantId) // filter away signal from Docker sandboxes\n| where customDimensions.alObjectId != '0' \n| where isnotempty(customDimensions.alObjectId)\n| extend ObjectType = tostring(customDimensions.alObjectType)\n    , ObjectId = tostring(customDimensions.alObjectId)\n    , ObjectName = tostring(customDimensions.alObjectName)\n    , sqlStatement = tostring(customDimensions.sqlStatement)\n    , companyName = tostring(customDimensions.companyName)        \n    , numberOfJoins = countof(tostring(customDimensions.sqlStatement), \"JOIN\")\n    , EventId = tostring(customDimensions.eventId)\n    , StackTrace = tostring(customDimensions.alStackTrace)\n    , userId = user_Id\n| extend operationType = case(\n    sqlStatement startswith \"UPDATE\", \"UPDATE\"\n    , sqlStatement startswith \"DELETE\", \"DELETE\"\n    , sqlStatement startswith \"BeginTransaction\", \"BEGIN_TRANS\"\n    , sqlStatement matches regex \"INSERT INTO\", \"INSERT\"\n    , sqlStatement startswith \"SELECT\", \"SELECT\"\n    , sqlStatement matches regex \"IF EXISTS \\\\(SELECT (.*)\\\\) SELECT\", \"SELECT'\"\n    , sqlStatement has \"SELECT NEXT VALUE FOR\", \"SELECT_SEQUENCE_VALUE\"\n    , sqlStatement has \"SELECT @@SPID\", \"SELECT_SPID\"\n    , sqlStatement matches regex \"(.*)WITH\", \"SELECT\"\n    , sqlStatement startswith \"CREATE TABLE\", \"CREATE_TABLE\"\n    , sqlStatement startswith \"ALTER TABLE\", \"ALTER_TABLE\"\n    , sqlStatement startswith \"exec sp_rename\", \"RENAME_TABLE\" \n    , sqlStatement matches regex \"(.*)DROP TABLE\", \"DROP_TABLE\"\n    , sqlStatement startswith \"SET LOCK_TIMEOUT\", \"SET_LOCK_TIMEOUT\"\n    , sqlStatement has \"sp_getapplock\", \"GET_APP_LOCK\"\n    , \"UNKNOWN\"\n    ) \n| parse kind=regex sqlStatement with selectPart: string \"FROM \\\"SQLDATABASE\\\".dbo.\\\"CURRENTCOMPANY\\\\$\" tablename: string \"\\\\$\" space: string\n| extend splitStacktrace = split(customDimensions.alStackTrace, \"\\n\")\n| extend lengthStacktrace = array_length(splitStacktrace)\n| extend\n    topOfStackline = tostring(splitStacktrace[0]),\n    bottomOfStackline = tostring(splitStacktrace[lengthStacktrace - 1])\n| extend topOfStackObjectName = extract('\\\\\\\"?([^\\\\\\\"]+)\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\)', 1, topOfStackline)\n| extend topOfStackObjectType = extract('\\\\(([a-zA-Z]+) \\\\d+\\\\)', 1, topOfStackline)\n| extend topOfStackObjectId = extract('\\\\([a-zA-Z]+ (\\\\d+)\\\\)', 1, topOfStackline)\n| extend topOfStackLineNumber = extract(' line (\\\\d+)', 1, topOfStackline)\n| extend topOfStackExtensionName = case (\n    isnotempty(topOfStackLineNumber), extract('line \\\\d+ - (.+) by', 1, topOfStackline),\n    extract(' - (.+) by', 1, topOfStackline)\n    )\n| extend topOfStackPublisher = extract('.+ by (.+)', 1, topOfStackline)\n| extend topOfStackWhatWasCalled = case(\n    isnotempty(topOfStackLineNumber), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) line', 1, topOfStackline),\n    isnotempty(topOfStackExtensionName), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) -(.+) by (.+)', 1, topOfStackline),\n    extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+)', 1, topOfStackline)\n    )\n| extend bottomOfStackObjectName = extract('\\\\\\\"?([^\\\\\\\"]+)\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackObjectType = extract('\\\\(([a-zA-Z]+) \\\\d+\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackObjectId = extract('\\\\([a-zA-Z]+ (\\\\d+)\\\\)', 1, bottomOfStackline)\n| extend bottomOfStackLineNumber = extract(' line (\\\\d+)', 1, bottomOfStackline)\n| extend bottomOfStackExtensionName = case (\n    isnotempty(bottomOfStackLineNumber), extract('line \\\\d+ - (.+) by', 1, bottomOfStackline),\n    extract(' - (.+) by', 1, bottomOfStackline)\n    )\n| extend bottomOfStackPublisher = extract('.+ by (.+)', 1, bottomOfStackline)\n| extend bottomOfStackWhatWasCalled = case(\n    isnotempty(bottomOfStackLineNumber), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) line', 1, bottomOfStackline),\n    isnotempty(bottomOfStackExtensionName), extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+) -(.+) by (.+)', 1, bottomOfStackline),\n    extract('\\\\\\\"?[^\\\\\\\"]+\\\\\\\"?\\\\([a-zA-Z]+ \\\\d+\\\\).(.+)', 1, bottomOfStackline)\n    )\n| extend SourceProcess = strcat(bottomOfStackWhatWasCalled , \" - \", bottomOfStackObjectType, \" \", bottomOfStackObjectId, \" \", bottomOfStackObjectName, \" (\", bottomOfStackExtensionName, \")\")\n    , LockingObject = strcat(topOfStackObjectType, \" '\", topOfStackObjectName,\"'\")\n    , LockingObjectId = tostring(topOfStackObjectId)\n    , LockingObjectMethod = tostring(topOfStackWhatWasCalled)\n    , LockingObjectExtension = tostring(topOfStackExtensionName)\n| project\n    timestamp,\n    aadTenantId,\n    companyName,\n    ObjectType,\n    ObjectId,\n    ObjectName,\n    operationType,\n    numberOfJoins,\n    LockingObject,\n    LockingObjectId,\n    LockingObjectMethod,\n    LockingObjectExtension,    \n    SourceProcess,\n    StackTrace,\n    customDimensions\n| summarize count = count() by tostring(LockingObject)\n| order by ['count'],LockingObject desc \n\n\n","id":"016fc5c6-861a-4394-94ca-cf749eac1bd2","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n| where isnotempty( customDimensions.endpoint)\n| extend totalTime = toint(totimespan(customDimensions.totalTime)/10000)\n    , endpoint = tostring(customDimensions.endpoint)\n    , eventId = tostring(customDimensions.eventId)\n// | project timestamp, aadTenantId, companyName, endpoint, totalTime\n| summarize count(), avgTime = toint(avg(totalTime)), totalTime = sum(totalTime) by tenantDescription\n| order by avgTime desc \n","id":"17f31632-bbd6-48ca-8f46-3f575cc6fd76","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n| where isnotempty( customDimensions.endpoint)\n| extend totalTime = toint(totimespan(customDimensions.totalTime)/10000)\n    , endpoint = tostring(customDimensions.endpoint)\n    , eventId = tostring(customDimensions.eventId)\n| summarize count(), avgTime = toint(avg(totalTime)), totalTime = sum(totalTime) by bin(timestamp,1d), tenantDescription\n| take 10","id":"7e9129d2-6022-483f-b11c-570e1f1925bc","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTraces_Customers\n| union pageViews\n| where timestamp >= ago(90d)\n| summarize count() by bin(timestamp,1d)","id":"19e9dfd7-b471-44f1-91e4-8b1ccebf7521","usedVariables":["AllTraces_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n| where customDimensions.eventId == 'RT0008' //WebServiceCalled\n| extend decentMessage = iif(indexof(message, \":\") <= 0, message, substring(message, 0, indexof(message, \":\")))\n, endpoint = tostring(customDimensions.endpoint)\n, alObjectName = tostring(customDimensions.alObjectName)\n, serverExecutionTime = tostring(customDimensions.serverExecutionTime)\n, serverExecutionTimeInMS = toreal(totimespan(customDimensions.serverExecutionTime))/10000 //the datatype for executionTime is timespan \n, totalTime = tostring(customDimensions.totalTime)\n, totalTimeInMS = toreal(totimespan(customDimensions.totalTime))/10000 //the datatype for executionTime is timespan \n| summarize count = count(), avgServerExecutionTimeInMS = avg(serverExecutionTimeInMS), avgTotalTimeInMs = avg(totalTimeInMS) by alObjectName\n| project \n    alObjectName\n    , ['count']\n    , avgServerExecutionTimeInMS = round(avgServerExecutionTimeInMS,0)\n    , avgTotalTimeInMs = round(avgTotalTimeInMs, 0)\n    , ApproxTime = round(['count'] * avgServerExecutionTimeInMS,0)\n| order by ApproxTime desc ","id":"c25942ed-6529-46c4-b237-2dbc164a102e","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n| where customDimensions.eventId == 'RT0008' //WebServiceCalled\n| extend decentMessage = iif(indexof(message, \":\") <= 0, message, substring(message, 0, indexof(message, \":\")))\n, endpoint = tostring(customDimensions.endpoint)\n, alObjectName = tostring(customDimensions.alObjectName)\n, serverExecutionTime = tostring(customDimensions.serverExecutionTime)\n, serverExecutionTimeInMS = toreal(totimespan(customDimensions.serverExecutionTime))/10000 //the datatype for executionTime is timespan \n, totalTime = tostring(customDimensions.totalTime)\n, totalTimeInMS = toreal(totimespan(customDimensions.totalTime))/10000 //the datatype for executionTime is timespan \n| summarize count = count(), avgServerExecutionTimeInMS = avg(serverExecutionTimeInMS), avgTotalTimeInMs = avg(totalTimeInMS) by endpoint\n| project \n    endpoint\n    , ['count']\n    , avgServerExecutionTimeInMS = round(avgServerExecutionTimeInMS,0)\n    , avgTotalTimeInMs = round(avgTotalTimeInMs, 0)\n    , ApproxTime = round(['count'] * avgServerExecutionTimeInMS,0)\n| order by ApproxTime desc ","id":"ed79755a-71f3-4cf6-8d35-c6553ccbccb0","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTracesWithDefaultFilters_Customers\n| where aadTenantId <> 'common' //Remove docker stuff (Not interesting in this graph)\n// | where timestamp between (_startTime .. _endTime)\n// | extend aadTenantId = tostring(substring(customDimensions.aadTenantId,1,strlen(customDimensions.aadTenantId)-2))\n// | where aadTenantId has_any (_entraTenantId)\n| summarize count() by tenantDescription\n// | project Customer = iif(isnotempty( tenantDescription), strcat(aadTenantId, \" (\",tenantDescription,\")\"),aadTenantId), count_\n| order by count_ desc \n| take 10","id":"5f8bfae0-e479-4e81-ae17-8f3349658772","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"let BaseQuery = AllTracesWithDefaultFilters_Customers | count | extend Desc = 'BaseQuery (including PageViews)';\nlet TracesTable = traces | where timestamp between (_startTime .. _endTime)| count | extend Desc = 'TracesTable'; \nlet PageViewsTable = pageViews | where timestamp between (_startTime .. _endTime)| count | extend Desc = 'PageViewsTable'; \nlet AllSignalsBaseQuery = AllSignals| where timestamp between (_startTime .. _endTime)| count | extend Desc = 'AllSignals (including PageViews)'; \nBaseQuery \n| union TracesTable \n| union AllSignalsBaseQuery\n| union PageViewsTable","id":"028c6bea-dc9d-44a5-9c13-16f686cf57d6","usedVariables":["AllSignals","AllTracesWithDefaultFilters_Customers","_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"externaldata(entraTenantId :string, tenantDescription:string)\n        [h@'https://www.dropbox.com/scl/fi/a8azyia77owvtb4m9wjhi/entraTenantId.json?rlkey=ene62tb29pvrm78adk3ifs8nw&dl=1']\n            with(format='multijson');","id":"d0ae9d37-45d4-404d-8c51-d55154cf8cbe","usedVariables":[]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"// let averageCount = \n//     toscalar(AllTracesWithDefaultFilters_Customers\n//     | where isnotempty( elapsedTimeInMS)\n//     | summarize count() by tenantDescription, eventDescription, eventId\n//     | summarize toint(avg(count_)));\nAllTracesWithDefaultFilters_Customers\n    | where isnotempty( elapsedTimeInMS)\n    | summarize toint(avg(elapsedTimeInMS)), count() by tenantDescription, eventDescription, eventId\n    // | where count_ >= averageCount\n    | order by avg_elapsedTimeInMS desc\n    | take 100  \n","id":"3015587d-5adf-4356-8a67-9725cc7cfcdb","usedVariables":["AllTracesWithDefaultFilters_Customers"]},{"id":"29a93288-a87b-4760-a2e7-993387c089e5","dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"let SignalDefinitions = externaldata(eventId :string, eventArea:string, eventDescription:string)\n        [h@'https://www.dropbox.com/scl/fi/0oh1kxqldoq6ujf5u45g7/Signals.json?rlkey=057i56lcivyxh0f8pcwq6fcfv&dl=1']\n            with(format='multijson');\ntraces\n| union pageViews\n| extend elapsedTimeInMS = \n        iif(isnotempty(customDimensions.executionTime), toint(totimespan(customDimensions.executionTime))/10000\n        , iif(isnotempty(customDimensions.serverExecutionTime), toint(totimespan(customDimensions.serverExecutionTime))/10000\n            , iif(isnotempty(customDimensions.totalTime), toint(totimespan(customDimensions.totalTime))/10000\n                , iif(isnotempty(customMeasurements.durations), customMeasurements.durations\n                    , iif(isnotempty( customDimensions.alJobQueueExecutionTimeInMs), customDimensions.alJobQueueExecutionTimeInMs\n        , dynamic(null))))))\n| extend eventId = tostring(customDimensions.eventId)\n| join kind=leftouter SignalDefinitions on $left.eventId == $right.eventId","usedVariables":[]},{"id":"8775d310-d27c-4cc6-92ec-0a9492fb8c2e","dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"let entraTenantIdDescriptions = externaldata(entraTenantId :string, tenantDescription:string)\n        [h@'https://www.dropbox.com/scl/fi/a8azyia77owvtb4m9wjhi/entraTenantId.json?rlkey=ene62tb29pvrm78adk3ifs8nw&dl=1']\n            with(format='multijson');\nAllSignals\n| extend aadTenantId = iif(strlen(customDimensions.aadTenantId)==36, substring(customDimensions.aadTenantId,1,strlen(customDimensions.aadTenantId)-2), customDimensions.aadTenantId) //Obfuscate the TenantId\n| extend extensionName = iif(isempty( customDimensions.extensionName), 'N/A',\n    iif(customDimensions.extensionPublisher !contains 'iFacto' and customDimensions.extensionPublisher !contains 'Microsoft', 'ISV',\n        iif( customDimensions.extensionName contains \"iFacto\" \n            or customDimensions.extensionName contains \"Single\"\n            or customDimensions.extensionName contains \"Distri\"\n            or customDimensions.extensionName contains \"Commerce\"\n                , customDimensions.extensionName, 'PTE')))\n| join kind=leftouter entraTenantIdDescriptions on $left.aadTenantId == $right.entraTenantId\n| extend entraTenantId = tostring(aadTenantId)\n| extend tenantDescription = iif(isempty( tenantDescription),tostring(aadTenantId),tenantDescription)","usedVariables":["AllSignals"]},{"id":"6316ccb4-4fa4-4ee7-bd59-40c9f74eaef7","dataSource":{"kind":"inline","dataSourceId":"d1beef7f-3df5-4cb4-b1bd-dfa9e1c8ee0d"},"text":"let entraTenantIdDescriptions = externaldata(entraTenantId :string, tenantDescription:string)\n        [h@'https://www.dropbox.com/scl/fi/a8azyia77owvtb4m9wjhi/entraTenantId.json?rlkey=ene62tb29pvrm78adk3ifs8nw&dl=1']\n            with(format='multijson');\nAllSignals\n| extend aadTenantId = iif(strlen(customDimensions.aadTenantId)==36, substring(customDimensions.aadTenantId,1,strlen(customDimensions.aadTenantId)-2), customDimensions.aadTenantId) //Obfuscate the TenantId\n| extend extensionName = iif(isempty( customDimensions.extensionName), 'N/A',\n    iif(customDimensions.extensionPublisher !contains 'iFacto' and customDimensions.extensionPublisher !contains 'Microsoft', 'ISV',\n        iif( customDimensions.extensionName contains \"iFacto\" \n            or customDimensions.extensionName contains \"Single\"\n            or customDimensions.extensionName contains \"Distri\"\n            or customDimensions.extensionName contains \"Commerce\"\n                , customDimensions.extensionName, 'PTE')))\n| join kind=leftouter entraTenantIdDescriptions on $left.aadTenantId == $right.entraTenantId\n| extend entraTenantId = tostring(aadTenantId)\n| extend tenantDescription = iif(isempty( tenantDescription),tostring(aadTenantId),tenantDescription)","usedVariables":["AllSignals"]},{"id":"92f44f09-2357-4902-8a45-a1cd119761d0","dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"AllTraces_Customers\n| where timestamp between (_startTime .. _endTime)\n| where message contains _MessageFilter\n| where aadTenantId has_any (_entraTenantId)\n| where tenantDescription has_any (_TenantDescription)","usedVariables":["AllTraces_Customers","_MessageFilter","_TenantDescription","_endTime","_entraTenantId","_startTime"]},{"id":"05b5c274-1fdc-4edd-8164-c8441e98eea1","dataSource":{"kind":"inline","dataSourceId":"d1beef7f-3df5-4cb4-b1bd-dfa9e1c8ee0d"},"text":"AllTraces_Distri\n| where timestamp between (_startTime .. _endTime)\n| where message contains _MessageFilter\n| where aadTenantId has_any (_entraTenantId)\n| where tenantDescription has_any (_TenantDescription)","usedVariables":["AllTraces_Distri","_MessageFilter","_TenantDescription","_endTime","_entraTenantId","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"externaldata(EventID :string, Area:string, Message:string)\n        [h@'https://www.dropbox.com/scl/fi/0oh1kxqldoq6ujf5u45g7/Signals.json?rlkey=057i56lcivyxh0f8pcwq6fcfv&dl=1']\n            with(format='multijson')\n| where Message contains _MessageFilter\n| summarize by Area;","id":"4964a105-89b1-4aa7-85d7-4aa446ec7e5e","usedVariables":["_MessageFilter"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"traces\n| where timestamp between (_startTime .. _endTime)\n| where isnotempty(customDimensions.aadTenantId)\n| extend entraTenantId = tostring(customDimensions.aadTenantId)\n| summarize by entraTenantId\n| project entraTenantId=iif(strlen(entraTenantId)==36, entraTenantId = substring(entraTenantId,1,strlen(entraTenantId)-2), entraTenantId) //Obfuscate the TenantId","id":"144471c1-a40a-4856-ba47-45b4dabfc470","usedVariables":["_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"traces\n| where customDimensions.extensionPublisher <> 'Microsoft'\n| where isnotempty(customDimensions.extensionName)\n| extend extensionName = tostring(customDimensions.extensionName)\n| summarize by extensionName","id":"9a2b604e-53e0-47bc-b10d-ee2a857a33c5","usedVariables":[]},{"dataSource":{"kind":"inline","dataSourceId":"05ae5610-5603-45ac-9458-616539c1c150"},"text":"let entraTenantIdDescriptions = externaldata(entraTenantId :string, tenantDescription:string)\n        [h@'https://www.dropbox.com/scl/fi/a8azyia77owvtb4m9wjhi/entraTenantId.json?rlkey=ene62tb29pvrm78adk3ifs8nw&dl=1']\n            with(format='multijson');\ntraces\n| where timestamp between (_startTime .. _endTime)\n| where message contains _MessageFilter\n| extend aadTenantId = iif(strlen(customDimensions.aadTenantId)==36, substring(customDimensions.aadTenantId,1,strlen(customDimensions.aadTenantId)-2), customDimensions.aadTenantId) //Obfuscate the TenantId\n| where aadTenantId has_any (_entraTenantId)\n| join kind=leftouter entraTenantIdDescriptions on $left.aadTenantId == $right.entraTenantId\n| extend entraTenantId = tostring(aadTenantId)\n| extend tenantDescription = iif(isempty( tenantDescription),tostring(aadTenantId),tenantDescription)\n| summarize by tenantDescription","id":"5f55ca6c-e29b-4b18-a7fa-3075bf6f71c1","usedVariables":["_MessageFilter","_endTime","_entraTenantId","_startTime"]}]}