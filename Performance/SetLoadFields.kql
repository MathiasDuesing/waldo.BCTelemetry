traces
// | where customDimensions has "customername"
| where timestamp >= ago(30d) // adjust as needed. The value 30 comes from the app configuration
| where isnotempty(customDimensions.aadTenantId) // filter away signal from Docker sandboxes
| where isnotempty(customDimensions.sqlStatement)
| where not(customDimensions.alObjectType in ("Page"))
| where customDimensions.sqlStatement startswith "SELECT"
| extend numberOfJoins = countof(tostring(customDimensions.sqlStatement), "JOIN") 
| parse kind=regex tostring(customDimensions.sqlStatement) with selectPart: string "FROM" rest: string
| extend numberOfColumnsSelected = countof(selectPart, ",") + 1
    , TenantId = strcat(customDimensions.aadTenantId)
    , ObjectType = tostring(customDimensions.alObjectType)
    , ObjectId = tostring(customDimensions.alObjectId)
    , ObjectName = tostring(customDimensions.alObjectName)
    , sqlStatement = tostring(customDimensions.sqlStatement)
    , companyName = tostring(customDimensions.companyName)
| parse kind=regex sqlStatement with selectPart: string "FROM" tablename: string
| project TenantId, companyName, numberOfColumnsSelected, numberOfJoins, customDimensions.executionTime, tablename, ObjectType, ObjectId, ObjectName, message, customDimensions.eventId, customDimensions
| order by numberOfColumnsSelected desc 
| take 100

//Grouped 
traces
// | where customDimensions has "customername"
| where timestamp >= ago(7d) // adjust as needed. The value 30 comes from the app configuration
| where isnotempty(customDimensions.aadTenantId) // filter away signal from Docker sandboxes
| where isnotempty(customDimensions.sqlStatement)
| where not(customDimensions.alObjectType in ("Page"))
| where customDimensions.sqlStatement startswith "SELECT"
| extend intObjectId = toint(customDimensions.alObjectId)
| where intObjectId between (50000..99999)
    or intObjectId between (2030000..2050000) 
    or intObjectId between (70000000..72000000)
| extend numberOfJoins = countof(tostring(customDimensions.sqlStatement), "JOIN") 
| parse kind=regex tostring(customDimensions.sqlStatement) with selectPart: string "FROM" rest: string
| extend numberOfColumnsSelected = countof(selectPart, ",") + 1
    , TenantId = strcat(customDimensions.aadTenantId)
    , ObjectType = tostring(customDimensions.alObjectType)
    , ObjectId = tostring(customDimensions.alObjectId)
    , ObjectName = tostring(customDimensions.alObjectName)
    , sqlStatement = tostring(customDimensions.sqlStatement)
    , companyName = tostring(customDimensions.companyName)
| parse kind=regex sqlStatement with selectPart: string "FROM" tablename: string
| project TenantId, companyName, numberOfColumnsSelected, numberOfJoins, customDimensions.executionTime, tablename, ObjectType, ObjectId, ObjectName, message, customDimensions.eventId, customDimensions
| summarize numberOfColumnsSelected = avg(numberOfColumnsSelected),  ; count = count() by TenantId, companyName, tablename, ObjectType, ObjectId, ObjectName
| order by numberOfColumnsSelected desc 
| take 100

